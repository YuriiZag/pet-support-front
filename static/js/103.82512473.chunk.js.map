{"version":3,"file":"static/js/103.82512473.chunk.js","mappings":"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","sources":["Helpers/birthdayNormalizer.ts","Components/FormElements/FormElements.styled.ts","Components/Modal/modal.styled.ts","Components/FornMarks/formMarks.styled.ts","Components/FornMarks/formMarks.tsx","Components/Error/error.styled.ts","Components/Error/error.tsx","Components/Dropzone/dropzone.styled.ts","Components/Dropzone/dropzone.tsx","Helpers/imageConverter.ts","Components/Modal/modal.tsx","Components/CategoryList/categoryList.styled.ts","api/noticesAPI.ts","Components/CategoryList/categoryList.tsx","Components/FindPetSearchBar/findPetSearchBar.styled.ts","Components/FindPetSearchBar/findPetSearchBar.tsx","pages/findPetPage/findPetPage.styled.ts","Components/Notices/notices.styled.ts","Components/NoticeById/noticeById.styled.ts","Helpers/ageCalculator.ts","Components/NoticeById/noticeById.tsx","Components/Notices/notices.tsx","Components/AddNoticeForm/categoryRadio.styled.ts","Components/AddNoticeForm/categoryRadio.tsx","Components/AddNoticeForm/addNoticeForm.styled.ts","Components/AddNoticeForm/sexRadioButton.styled.ts","Components/AddNoticeForm/sexRadioButton.tsx","validationSchemas/addNoticeSchema.ts","Components/AddNoticeForm/addNoticeForm.tsx","pages/findPetPage/findPetPage.tsx","Components/Button/button.styled.ts"],"sourcesContent":["const birthDayNormalizer = (date: string | undefined): string => {\r\n      if (date) {\r\n        const splitedDate: string[] = date.split(\"-\");\r\n        const normalizedDate: string =\r\n          splitedDate[2] + \".\" + splitedDate[1] + \".\" + splitedDate[0];\r\n    \r\n        return normalizedDate;\r\n      }\r\n      return \"birthday error\"\r\n  };\r\n\r\nexport default birthDayNormalizer","import styled from \"styled-components\";\r\n\r\nexport const FormInput = styled.input`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 280px;\r\n  padding: 12px 14px;\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  background-color: transparent;\r\n  ::placeholder {\r\n    color: rgba(17, 17, 17, 0.6);\r\n    font-weight: 400px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\nexport const FormButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 280px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const FormListItem = styled.li`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  position: relative;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  position: relative;\r\n  max-width: 280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const SpecialFieldError = styled.p`\r\n  margin-top: 4px;\r\n  margin-left: 32px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: rgba(60, 188, 129, 1);\r\n`;\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  backdrop-filter: blur(10px);\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1200;\r\n  padding: 20px;\r\n  overflow: auto;\r\n  pointer-events: auto;\r\n`;\r\n\r\nexport const Modal = styled.div`\r\n  position: relative;\r\n  overflow: auto;\r\n  pointer-events: auto;\r\n  border-radius: 20px;\r\n  width: auto;\r\n\r\n  background-color: white;\r\n  z-index: 1201;\r\n\r\n  @media screen and (width < 768px) {\r\n    width: 280px;\r\n  }\r\n`;\r\n\r\nexport const ModalCloseButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background-color: #fdf7f2;\r\n\r\n  width: 34px;\r\n  height: 34px;\r\n`;\r\n","import styled from \"styled-components\"\r\n\r\nexport const FormMarkWrapper = styled.div`\r\n position: absolute;\r\n color: red;\r\n right: 18px;\r\n bottom: 28px;\r\n`\r\n\r\nexport const FormHint = styled.p`\r\n margin-top: 4px;\r\n margin-left: 32px;\r\n font-size: 14px;\r\n font-weight: 400;\r\n color: rgba(60, 188, 129, 1);\r\n`","import { GoXCircleFill } from \"react-icons/go\";\r\nimport { FormHint, FormMarkWrapper } from \"./formMarks.styled\";\r\n\r\n\r\nexport const FormMark = ({ message }: { message: string}) => {\r\n  return (\r\n    <>\r\n      <FormMarkWrapper>\r\n        <GoXCircleFill\r\n          style={{ width: \"20px\", height: \"20px\" }}\r\n        ></GoXCircleFill>\r\n      </FormMarkWrapper>\r\n      <FormHint>{message}</FormHint>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const ErrorContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 10%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const ErrorHeading = styled.h1`\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 64px;\r\n}\r\n`;\r\nexport const ErrorPhrase = styled.p`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 34px;\r\n    text-align: center;\r\n  }\r\n\r\n`;\r\n\r\nexport const ErrorImg = styled.img`\r\n  width: 60%;\r\n  @media screen and (min-width: 768px) {\r\n  width: 25%;\r\n  }\r\n`;\r\n","import SadPepe from \"../../pictures/error.png\";\r\nimport {\r\n  ErrorContainer,\r\n  ErrorHeading,\r\n  ErrorImg,\r\n  ErrorPhrase,\r\n} from \"./error.styled\";\r\n\r\nexport const ErrorFiller = () => {\r\n  return (\r\n    <ErrorContainer>\r\n      <ErrorImg src={SadPepe} alt=\"sad Pepe\"></ErrorImg>\r\n      <div>\r\n        <ErrorHeading>OOPS ERROR!</ErrorHeading>\r\n        <ErrorPhrase> Content not found</ErrorPhrase>\r\n      </div>\r\n    </ErrorContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DropZoneContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  margin-top: 8px;\r\n\r\n  background-color: rgba(253, 247, 242, 1);\r\n  width: 208px;\r\n  height: 208px;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const DropZoneImage = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 20px;\r\n`;","import React, { useCallback, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DropZoneContainer, DropZoneImage } from \"./dropzone.styled\";\r\nimport { BsPlusLg } from \"react-icons/bs\";\r\nimport convertToBase64 from \"../../Helpers/imageConverter\";\r\n\r\nexport const DropZone = ({\r\n  avatarInputHandler,\r\n}: {\r\n  avatarInputHandler: (path: string) => void;\r\n}) => {\r\n  const fileWhiteList = [\r\n    \"image/png\",\r\n    \"image/webp\",\r\n    \"image/jpeg\",\r\n    \"image/jpg\",\r\n    \"image/svg\",\r\n  ];\r\n  \r\n  \r\n  const [cryptImage, setCryptImage] = useState<string | null>(null);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles: File[]) => {\r\n      if (!fileWhiteList.includes(acceptedFiles[0].type)) {\r\n        window.alert(\"file format should be png, webp, jpg, jpeg, svg\");\r\n        return;\r\n      }\r\n\r\n      convertToBase64(acceptedFiles[0])\r\n        .then((base64String) => {\r\n      \r\n          \r\n          const imageString = `data:${acceptedFiles[0].type};base64,${base64String}`;\r\n          setCryptImage(imageString);\r\n          avatarInputHandler(imageString);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error converting file:\", error);\r\n        });\r\n      \r\n    },\r\n    // eslint-disable-next-line\r\n    [avatarInputHandler]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <DropZoneContainer {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {cryptImage === null ? (\r\n        <BsPlusLg\r\n          style={{\r\n            color: \"rgba(17, 17, 17, 0.6)\",\r\n            width: \"48px\",\r\n            height: \"48px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <DropZoneImage src={cryptImage} alt=\"petImg\" />\r\n      )}\r\n    </DropZoneContainer>\r\n  );\r\n};\r\n\r\n","function convertToBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      const result = reader.result as string;\r\n      if (result) {\r\n        resolve(result.split(\",\")[1]); // Отримуємо тільки base64 без `data:image/...;base64,`\r\n      } else {\r\n        reject(new Error(\"Failed to read file\"));\r\n      }\r\n    };\r\n\r\n    reader.onerror = (error) => reject(error);\r\n\r\n    reader.readAsDataURL(file); // Читаємо файл як data URL\r\n  });\r\n}\r\n\r\nexport default convertToBase64;","import { ReactPortal, useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Backdrop, Modal } from \"./modal.styled\";\r\n\r\n\r\n\r\ninterface IModalProps {\r\n  \r\n  children: React.ReactNode;\r\n  toggleModal: () => void;\r\n  modalOpenState?: boolean;\r\n}\r\n\r\nexport const ModalWindow = ({\r\n  children,\r\n  toggleModal,\r\n  modalOpenState,\r\n}: IModalProps): ReactPortal | null => {\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.code === \"Escape\") {\r\n        toggleModal();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (modalOpenState) {\r\n      document.body.style.overflow = \"hidden\";\r\n      document.body.style.pointerEvents = \"none\";\r\n      document.body.style.overflow = \"\";\r\n      document.body.style.pointerEvents = \"\";\r\n    }\r\n    return () => {\r\n      document.body.style.overflow = \"\";\r\n      document.body.style.pointerEvents = \"\";\r\n    };\r\n  }, [modalOpenState]);\r\n\r\n  const onClickHandle = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    const target = e.target as HTMLElement;\r\n    if (target && target.children.length === 1) {\r\n      toggleModal();\r\n    }\r\n  };\r\n  const modalRoot: HTMLElement | null = document.getElementById(\"modal-root\");\r\n  if (!modalRoot) return null;\r\n  \r\n\r\n  if (modalRoot) {\r\n    return createPortal(\r\n      <Backdrop onClick={onClickHandle}>\r\n        <Modal onClick={(e) => e.stopPropagation()}>{children}</Modal>\r\n      </Backdrop>,\r\n      modalRoot\r\n    ) ;\r\n  }\r\n\r\n  return null\r\n};\r\n\r\n","import styled from \"styled-components\";\r\nimport { MainButton, SecondaryButton } from \"../Button/button.styled\";\r\n\r\nexport const PetCategoryList = styled.ul`\r\n  display: flex;\r\n  gap: 12px;\r\n  align-items: center;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n\r\n  margin-top: 28px;\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const ActiveCategory = styled(MainButton)`\r\n  width: 100%;\r\n  padding: 9px 28px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const InActiveCategory = styled(SecondaryButton)`\r\n  width: 100%;\r\n  padding: 9px 28px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin-bottom: 0;\r\n  @media screen and (min-width: 768) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { ICreatedNotice, INotice } from \"../interfaces/noticeIntefaces\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3000/\";\r\n\r\nexport const fetchNoticesByCategory = async (\r\n  category: string\r\n): Promise<AxiosResponse<{ notices: INotice[] }>> => {\r\n  try {\r\n    const response = await axios.get(`/notices/category/${category}`);\r\n\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchNoticeById = async (\r\n  id: string\r\n): Promise<AxiosResponse<{ notices: INotice }>> => {\r\n  try {\r\n    const response = await axios.get(`/notices/id/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchNoticeByTitle = async (\r\n  title: string\r\n): Promise<AxiosResponse<{ notices: INotice[] }>> => {\r\n  try {\r\n    const response = await axios.get(`notices/title/${title}`);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addNotices = async (\r\n  notice: ICreatedNotice\r\n): Promise<AxiosResponse<{newNotice: INotice}>> => {\r\n  try {\r\n    const response = await axios.post(`notices/`, notice);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteNotice = async (id: string): Promise<AxiosResponse> => {\r\n  try {\r\n    const response = await axios.delete(`notices/own/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getOwnNotices = async (): Promise<\r\n  AxiosResponse<{ notices: INotice[] }>\r\n> => {\r\n  try {\r\n    const response = await axios.get(\"/notices/own\");\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getFavouriteNotices = async (): Promise<\r\n  AxiosResponse<{ notices: INotice[] }>\r\n> => {\r\n  try {\r\n    const response = await axios.get(\"/notices/favourites\");\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const patchFavouriteStatus = async (data: {\r\n  id: string;\r\n  favouriteStatus: boolean;\r\n}): Promise<AxiosResponse<{ favouriteList: [string] }>> => {\r\n  try {\r\n    const response = await axios.patch(`/notices/favourites`, data);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ActiveCategory,\r\n  PetCategoryList,\r\n  InActiveCategory,\r\n} from \"./categoryList.styled\";\r\nimport {\r\n  fetchNoticesByCategory,\r\n  getFavouriteNotices,\r\n  getOwnNotices,\r\n} from \"../../api/noticesAPI\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../Redux/selectors\";\r\nimport { INotice } from \"../../interfaces/noticeIntefaces\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\n\r\nexport const FindPetCategoryList = ({\r\n  dataHandler,\r\n}: {\r\n  dataHandler: (response: AxiosError | AxiosResponse<{notices: INotice[]}> | null ) => void;\r\n}) => {\r\n\r\n  const [category, setCategory] = useState(\"sell\");\r\n  const navigate = useNavigate();\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  const categoryChangeHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    const text = (e.target as HTMLButtonElement).textContent;\r\n    switch (text) {\r\n      case \"sell\":\r\n        setCategory(\"sell\");\r\n        navigate(\"/notices/sell\", { replace: true });\r\n        break;\r\n      case \"lost/found\":\r\n        setCategory(\"lost found\");\r\n        navigate(\"/notices/lost-found\", { replace: true });\r\n        break;\r\n      case \"in good hands\":\r\n        setCategory(\"in good hands\");\r\n        navigate(\"/notices/in-good-hands\", { replace: true });\r\n        break;\r\n      case \"favorite ads\":\r\n        setCategory(\"favorite ads\");\r\n        navigate(\"/notices/favourite-ads\", { replace: true });\r\n        break;\r\n      case \"my ads\":\r\n        setCategory(\"my ads\");\r\n        navigate(\"/notices/my-ads\", { replace: true });\r\n        break;\r\n      default:\r\n        setCategory(\"sell\");\r\n        navigate(\"/notices/sell\", { replace: true });\r\n        break;\r\n    }\r\n  }; \r\n  async function fetchNotices() {\r\n    let response: AxiosError | AxiosResponse<{notices: INotice[]}> | null = null\r\n    try {\r\n      if ([\"sell\", \"lost found\", \"in good hands\"].includes(category)) {\r\n        response = await fetchNoticesByCategory(category);\r\n        \r\n      } else if (category === \"my ads\") {\r\n        response = await getOwnNotices();\r\n   \r\n      } else if (category === \"favorite ads\") {\r\n        response = await getFavouriteNotices();\r\n        \r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        response = error\r\n      }\r\n      return null\r\n    }\r\n    dataHandler(response)\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchNotices();\r\n    navigate(`/notices/${category}`, { replace: true });\r\n    // eslint-disable-next-line\r\n  }, [category]);\r\n\r\n  return (\r\n    <PetCategoryList>\r\n      <li>\r\n        {category === \"sell\" ? (\r\n          <ActiveCategory type=\"button\">sell</ActiveCategory>\r\n        ) : (\r\n          <InActiveCategory type=\"button\" onClick={categoryChangeHandler}>\r\n            sell\r\n          </InActiveCategory>\r\n        )}\r\n      </li>\r\n      <li>\r\n        {category === \"lost found\" ? (\r\n          <ActiveCategory type=\"button\">lost/found</ActiveCategory>\r\n        ) : (\r\n          <InActiveCategory type=\"button\" onClick={categoryChangeHandler}>\r\n            lost/found\r\n          </InActiveCategory>\r\n        )}\r\n      </li>\r\n      <li>\r\n        {category === \"in good hands\" ? (\r\n          <ActiveCategory type=\"button\">in good hands</ActiveCategory>\r\n        ) : (\r\n          <InActiveCategory type=\"button\" onClick={categoryChangeHandler}>\r\n            in good hands\r\n          </InActiveCategory>\r\n        )}\r\n      </li>\r\n      {isLoggedIn && (\r\n        <>\r\n          <li>\r\n            {category === \"favorite ads\" ? (\r\n              <ActiveCategory type=\"button\">favorite ads</ActiveCategory>\r\n            ) : (\r\n              <InActiveCategory type=\"button\" onClick={categoryChangeHandler}>\r\n                favorite ads\r\n              </InActiveCategory>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {category === \"my ads\" ? (\r\n              <ActiveCategory type=\"button\">my ads</ActiveCategory>\r\n            ) : (\r\n              <InActiveCategory type=\"button\" onClick={categoryChangeHandler}>\r\n                my ads\r\n              </InActiveCategory>\r\n            )}\r\n          </li>\r\n        </>\r\n      )}\r\n    </PetCategoryList>\r\n  );\r\n};\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const PetSearchBarLabel = styled.label`\r\n    position: relative;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    width: 100%;\r\n    @media screen and (min-width: 768px) {\r\n    width: 608px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n\r\n  }\r\n`\r\n\r\nexport const PetSearchBar = styled.input`\r\n    width: 100%;\r\n\r\n    border: none;\r\n    border-radius: 20px;\r\n    background-color: white;\r\n    padding: 12px 9px;\r\n    ::placeholder{\r\n        font-weight: 500;\r\n        font-size: 16px;\r\n        color: #535353;\r\n}\r\n`\r\nexport const SearchIconContainer = styled.div`\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 12px;\r\n    color:  #535353;\r\n`\r\n\r\nexport const NoticeClearTextButton = styled.button`\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 12px;\r\n    color:  #535353;\r\n    border: none;\r\n    background-color: transparent;\r\n`","import { useCallback, useEffect, useState } from \"react\";\r\nimport { IoSearch } from \"react-icons/io5\";\r\nimport { RxCrossCircled } from \"react-icons/rx\";\r\nimport {\r\n  PetSearchBarLabel,\r\n  SearchIconContainer,\r\n  PetSearchBar,\r\n  NoticeClearTextButton,\r\n} from \"./findPetSearchBar.styled\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\nimport { throttle } from \"lodash\";\r\nimport {\r\n  fetchNoticeByTitle,\r\n  fetchNoticesByCategory,\r\n} from \"../../api/noticesAPI\";\r\nimport { INotice } from \"../../interfaces/noticeIntefaces\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\n\r\n\r\nexport const FindPetSearchBar = ({\r\n  dataHandler,\r\n}: {\r\n  dataHandler: (response: AxiosError | AxiosResponse<{notices: INotice[]}> | null) => void;\r\n}) => {\r\n  const [searchQuerry, setSearchQuerry] = useState<string>(\"\");\r\n  const [params, setSearchParams] = useSearchParams();\r\n  const location = useLocation();\r\n\r\n  // eslint-disable-next-line\r\n  const throtledFunction = useCallback(\r\n    throttle(async (value: string) => {\r\n      setSearchParams({ title: value });\r\n\r\n      const response = await fetchNoticeByTitle(value);\r\n      dataHandler(response);\r\n    }, 1000),\r\n    []\r\n  );\r\n\r\n  const fetchByCategory = async (category: string) => {\r\n    const response = await fetchNoticesByCategory(\"sell\");\r\n    if (Array.isArray(response)) {\r\n      dataHandler(response);\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setSearchParams(\"\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (params.get(\"title\") !== null && params.get(\"title\") === \"\") {\r\n      const category = location.pathname.split(\"/\");\r\n      fetchByCategory(category[2])\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [params])\r\n\r\n  const searchBarHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuerry(e.target.value);\r\n    throtledFunction(e.target.value);\r\n  };\r\n\r\n  const handleInputClear = () => {\r\n    setSearchQuerry(\"\");\r\n    setSearchParams({ title: \"\" });\r\n  };\r\n\r\n  return (\r\n    <PetSearchBarLabel htmlFor=\"findPet\">\r\n      <PetSearchBar\r\n        name=\"findPet\"\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={searchQuerry}\r\n        onChange={searchBarHandler}\r\n      />\r\n      {searchQuerry === \"\" ? (\r\n        <SearchIconContainer>\r\n          <IoSearch style={{ width: \"20px\", height: \"20px\" }}></IoSearch>\r\n        </SearchIconContainer>\r\n      ) : (\r\n        <NoticeClearTextButton type=\"button\" onClick={handleInputClear}>\r\n          <RxCrossCircled style={{ width: \"20px\", height: \"20px\" }} />\r\n        </NoticeClearTextButton>\r\n      )}\r\n    </PetSearchBarLabel>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const FindPetContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding: 0 20px;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const FindPetHero = styled.h1`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  margin-top: 42px;\r\n  margin-bottom: 28px;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 48px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\nexport const FindPetStyledContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\nexport const AddNoticeButton = styled.button`\r\n  position: fixed;\r\n  top: 450px;\r\n  right: 20px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  color: #fff;\r\n\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  background-color: rgba(245, 146, 86, 1);\r\n  border: none;\r\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\r\n  border-radius: 50%;\r\n  @media screen and (min-width: 768px) {\r\n    justify-content: space-between;\r\n    flex-direction: row-reverse;\r\n\r\n    position: absolute;\r\n    right: 30px;\r\n    top: 5px;\r\n\r\n    color: #000;\r\n    background-color: transparent;\r\n    box-shadow: none;\r\n    width: 130px;\r\n  }\r\n`;\r\n\r\nexport const AddNoticeWrapper = styled.span`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nexport const ButtonAddContainer = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 44px;\r\n    height: 44px;\r\n    color: white;\r\n\r\n    background-color: rgba(245, 146, 86, 1);\r\n    border: none;\r\n    box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NoticesList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 32px;\r\n  margin-top: 30px;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 768px) {\r\n      flex-wrap: wrap;\r\n      flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const NoticeContainer = styled.li`\r\n  height: 606px;\r\n  width: 286px;\r\n  background-color: white;\r\n  border-radius: 0 0 20px 20px;\r\n  box-shadow: rgba(49, 21, 4, 0.07);\r\n\r\n`;\r\n\r\nexport const NoticeButtonList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const NoticeButtonListItem = styled.li`\r\n  width: 100%;\r\n`;\r\n\r\nexport const NoticeButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border: 2px solid #f59256;\r\n  border-radius: 40px;\r\n  padding: 8px 0;\r\n  width: 100%;\r\n  background-color: transparent;\r\n\r\n  color: #f59256;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport { SecondaryButton } from \"../Button/button.styled\";\r\n\r\ninterface IProps {\r\n  singleNotice: boolean;\r\n}\r\n\r\nexport const SingleNoticeContainer = styled.div.withConfig({\r\n  shouldForwardProp: (prop) => prop !== \"singleNotice\",\r\n})<IProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${(props) => (props.singleNotice ? \"60px 20px 40px 20px\" : \"0\")};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: ${(props) => (props.singleNotice ? \"704px\" : \"280px\")};\r\n    padding: ${(props) => (props.singleNotice ? \"32px 20px\" : \"0\")};\r\n  }\r\n`;\r\n\r\nexport const SingleStyleContainer = styled.div.withConfig({\r\n  shouldForwardProp: (prop) => prop !== \"singleNotice\",\r\n})<IProps>`\r\n  @media screen and (min-width: 768px) {\r\n    display: ${(props) => (props.singleNotice ? \"flex\" : \"block\")};\r\n  }\r\n`;\r\n\r\nexport const FavouriteNoticeButton = styled.button`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  color: rgba(245, 146, 86, 1);\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border-radius: 50%;\r\n  border: none;\r\n\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n\r\n  width: 44px;\r\n  height: 44px;\r\n`;\r\nexport const NoticeCategory = styled.p`\r\n  position: absolute;\r\n  top: 20px;\r\n\r\n  width: 140px;\r\n\r\n  border-radius: 0 20px 20px 0;\r\n\r\n  color: rgba(17, 17, 17, 1);\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  padding: 6px 20px;\r\n`;\r\n\r\nexport const NoticeTitle = styled.h2`\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n\r\n  margin-top: 20px;\r\n  padding: 0 20px;\r\n\r\n  color: rgba(17, 17, 17, 1);\r\n`;\r\n\r\nexport const NoticeInfoList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n\r\n  margin-top: 20px;\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const NoticeInfo = styled.span`\r\n  display: flex;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const NoticeInfoWrapper = styled.span`\r\n  display: block;\r\n  width: 90px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\nexport const NoticeAwatarWraper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const NoticeAvatar = styled.img`\r\n  max-width: 240px;\r\n  height: 240px;\r\n  border-radius: 0 0 20px 20px;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 288px;\r\n    height: 328px;\r\n  }\r\n`;\r\nexport const ContactList = styled.ul`\r\n  margin-top: 40px;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n  align-items: center;\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n    width: 332px;\r\n    align-self: flex-end;\r\n  }\r\n`;\r\n\r\nexport const ComentsWraper = styled.p`\r\n  margin-top: 28px;\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const ContactListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ContactButton = styled.a`\r\n  box-sizing: border-box;\r\n  border: 2px solid #f59256;\r\n  background-color: #f59256;\r\n  border-radius: 40px;\r\n\r\n  padding: 9px;\r\n  text-align: center;\r\n\r\n  width: 240px;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 160px;\r\n  }\r\n`;\r\n\r\nexport const FavouriteButton = styled(SecondaryButton)`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 0;\r\n  max-width: 240px;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 160px;\r\n  }\r\n`;\r\n","function ageCalc(birthDate: string | null | undefined\r\n): number | undefined {\r\n  if (birthDate) {\r\n    const dateArray: string[] = birthDate.split(\".\");\r\n    const petAliveDays: number =\r\n      Number(dateArray[0]) +\r\n      (Number(dateArray[1]) - 1) * 30.437 +\r\n      (Number(dateArray[2]) - 1) * 365.25;\r\n    const now: Date = new Date();\r\n    const age: number =\r\n      (Number(now.getDay()) +\r\n        (Number(now.getMonth()) - 1) * 30.437 +\r\n        (Number(now.getFullYear()) - 1) * 365.25 -\r\n        petAliveDays) /\r\n      365;\r\n    return Math.floor(age);\r\n  }\r\n}\r\n\r\nexport default ageCalc;\r\n","import {\r\n  NoticeAwatarWraper,\r\n  NoticeAvatar,\r\n  NoticeCategory,\r\n  NoticeTitle,\r\n  NoticeInfoList,\r\n  FavouriteNoticeButton,\r\n  NoticeInfo,\r\n  NoticeInfoWrapper,\r\n  FavouriteButton,\r\n  ContactButton,\r\n  ContactList,\r\n  ContactListItem,\r\n  ComentsWraper,\r\n  SingleNoticeContainer,\r\n  SingleStyleContainer,\r\n} from \"./noticeById.styled\";\r\nimport { IoHeartOutline } from \"react-icons/io5\";\r\nimport { IoHeartSharp } from \"react-icons/io5\";\r\nimport ageCalc from \"../../Helpers/ageCalculator\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { INotice } from \"../../interfaces/noticeIntefaces\";\r\nimport { ErrorFiller } from \"../Error/error\";\r\nimport { AxiosError } from \"axios\";\r\n\r\ninterface INoticeProps {\r\n  notice: INotice | null;\r\n  singleNotice: boolean;\r\n  updateFavouriteStatus: (data: {\r\n    id: string;\r\n    favouriteStatus: boolean;\r\n    singleNotice: boolean;\r\n  }) => void;\r\n  isLoggedIn: boolean;\r\n  favouriteList: string[];\r\n  error: AxiosError | null\r\n}\r\n\r\nexport const Notice = ({\r\n  notice,\r\n  singleNotice,\r\n  updateFavouriteStatus,\r\n  isLoggedIn,\r\n  favouriteList,\r\n  error\r\n}: INoticeProps) => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleFavouriteChange = (id: string) => {\r\n    if (!isLoggedIn) {\r\n      return navigate(\"/login\");\r\n    }\r\n\r\n    if (favouriteList.includes(id)) {\r\n      updateFavouriteStatus({\r\n        id: id,\r\n        favouriteStatus: false,\r\n        singleNotice: singleNotice,\r\n      });\r\n    }\r\n    if (!favouriteList.includes(id)) {\r\n      updateFavouriteStatus({\r\n        id: id,\r\n        favouriteStatus: true,\r\n        singleNotice: singleNotice,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!notice) {\r\n    return <ErrorFiller></ErrorFiller>\r\n  }\r\n\r\n\r\n    return (\r\n      <SingleNoticeContainer singleNotice={singleNotice}>\r\n        <SingleStyleContainer singleNotice={singleNotice}>\r\n          <NoticeAwatarWraper>\r\n            <NoticeAvatar src={notice.avatar} alt=\"petAvatar\"></NoticeAvatar>\r\n            <NoticeCategory>{notice.category}</NoticeCategory>\r\n            {!singleNotice && (\r\n              <FavouriteNoticeButton\r\n                onClick={(e) => handleFavouriteChange(notice._id)}\r\n              >\r\n                {favouriteList.includes(notice._id) ? (\r\n                  <IoHeartSharp\r\n                    style={{ width: \"22px\", height: \"24px\", color: \"red\" }}\r\n                  />\r\n                ) : (\r\n                  <IoHeartOutline style={{ width: \"22px\", height: \"24px\" }} />\r\n                )}\r\n              </FavouriteNoticeButton>\r\n            )}\r\n          </NoticeAwatarWraper>\r\n          <div>\r\n            <NoticeTitle>{notice.title}</NoticeTitle>\r\n            <NoticeInfoList>\r\n              {singleNotice && (\r\n                <li>\r\n                  <NoticeInfo>\r\n                    <NoticeInfoWrapper>Name:</NoticeInfoWrapper>\r\n                    <span>{notice.name}</span>\r\n                  </NoticeInfo>\r\n                </li>\r\n              )}\r\n              {singleNotice && (\r\n                <li>\r\n                  <NoticeInfo>\r\n                    <NoticeInfoWrapper>Birthday:</NoticeInfoWrapper>\r\n                    <span>{notice.birthDate}</span>\r\n                  </NoticeInfo>\r\n                </li>\r\n              )}\r\n              <li>\r\n                <NoticeInfo>\r\n                  <NoticeInfoWrapper>Breed:</NoticeInfoWrapper>\r\n                  <span>{notice.breed}</span>\r\n                </NoticeInfo>\r\n              </li>\r\n              <li>\r\n                <NoticeInfo>\r\n                  <NoticeInfoWrapper>Place:</NoticeInfoWrapper>\r\n                  <span>{notice.location}</span>\r\n                </NoticeInfo>\r\n              </li>\r\n              {singleNotice && (\r\n                <>\r\n                  <li>\r\n                    <NoticeInfo>\r\n                      <NoticeInfoWrapper>Sex:</NoticeInfoWrapper>\r\n                      <span>{notice.sex}</span>\r\n                    </NoticeInfo>\r\n                  </li>\r\n                  <li>\r\n                    <NoticeInfo>\r\n                      <NoticeInfoWrapper>Email:</NoticeInfoWrapper>\r\n                      <span>{notice.email}</span>\r\n                    </NoticeInfo>\r\n                  </li>\r\n                  <li>\r\n                    <NoticeInfo>\r\n                      <NoticeInfoWrapper>Phone:</NoticeInfoWrapper>\r\n                      <span>{notice.phoneNumber}</span>\r\n                    </NoticeInfo>\r\n                  </li>\r\n                </>\r\n              )}\r\n              {!singleNotice && (\r\n                <li>\r\n                  <NoticeInfo>\r\n                    <NoticeInfoWrapper>Age:</NoticeInfoWrapper>\r\n                    <span>{ageCalc(notice.birthDate)}</span>\r\n                  </NoticeInfo>\r\n                </li>\r\n              )}\r\n              {notice.price !== null && (\r\n                <li>\r\n                  <NoticeInfo>\r\n                    <NoticeInfoWrapper>Price:</NoticeInfoWrapper>\r\n                    <span>{notice.price}</span>\r\n                  </NoticeInfo>\r\n                </li>\r\n              )}\r\n            </NoticeInfoList>\r\n          </div>\r\n        </SingleStyleContainer>\r\n        {singleNotice && (\r\n          <NoticeInfo>\r\n            <ComentsWraper>Comments: {notice.comments}</ComentsWraper>\r\n          </NoticeInfo>\r\n        )}\r\n\r\n        {singleNotice && (\r\n          <ContactList>\r\n            <ContactListItem>\r\n              <ContactButton href={`tel:${notice.phoneNumber}`}>\r\n                Contact\r\n              </ContactButton>\r\n            </ContactListItem>\r\n            <ContactListItem>\r\n              <FavouriteButton\r\n                onClick={(e) => handleFavouriteChange(notice._id)}\r\n              >\r\n                {Array.isArray(favouriteList) && favouriteList.includes(notice._id) ? \"Remove from\" : \"Add to\"}\r\n                <IoHeartSharp\r\n                  style={{ width: \"22px\", height: \"24px\", color: \"red\" }}\r\n                />\r\n              </FavouriteButton>\r\n            </ContactListItem>\r\n          </ContactList>\r\n        )}\r\n      </SingleNoticeContainer>\r\n    );\r\n\r\n};\r\n\r\n\r\n","import { HiMiniTrash } from \"react-icons/hi2\";\r\n\r\nimport {\r\n  NoticeButton,\r\n  NoticeButtonList,\r\n  NoticeButtonListItem,\r\n  NoticeContainer,\r\n  NoticesList,\r\n} from \"./notices.styled\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ModalWindow } from \"../Modal/modal\";\r\nimport {\r\n  deleteNotice,\r\n  fetchNoticeById,\r\n  patchFavouriteStatus,\r\n} from \"../../api/noticesAPI\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Notice } from \"../NoticeById/noticeById\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { getIsLoggedIn } from \"../../Redux/selectors\";\r\nimport { currentUser } from \"../../Redux/operations\";\r\nimport { ModalCloseButton } from \"../Modal/modal.styled\";\r\nimport { IUser } from \"../../interfaces/authInterface\";\r\nimport { INotice } from \"../../interfaces/noticeIntefaces\";\r\nimport { useAppDispatch, useAppSelector } from \"../../customHooks/customHooks\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { errorToastEmitter, succesToastEmitter } from \"../Toaster/toaste\";\r\n\r\ninterface INoticeListProps {\r\n  noticesList: INotice[] | null;\r\n  user: IUser | null;\r\n  handleDelete: (id: string) => void;\r\n}\r\n\r\nexport const Notices = ({\r\n  noticesList,\r\n  user,\r\n  handleDelete,\r\n}: INoticeListProps) => {\r\n  const [modalOpenState, setModalOpenState] = useState<boolean>(false);\r\n  const [currentCategory, setCurrentCategory] = useState<string>(\"sell\");\r\n  const [favouriteList, setFavouriteList] = useState<string[]>([]);\r\n  const [notices, setNotices] = useState<INotice[]>([]);\r\n  const [noticeById, setNoticeById] = useState<INotice | null>(null);\r\n  const [error, setError] = useState<AxiosError | null>(null);\r\n  const { category } = useParams();\r\n  const isLoggedIn = useAppSelector(getIsLoggedIn);\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      dispatch(currentUser());\r\n    }\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    if (noticesList) {\r\n      setNotices(noticesList);\r\n    }\r\n    if (user !== null) {\r\n      setFavouriteList(user.favouriteNoticeId);\r\n    }\r\n  }, [noticesList, user]);\r\n\r\n  const toggleModal = () => {\r\n    setModalOpenState(!modalOpenState);\r\n  };\r\n\r\n  const responseHandle = (\r\n    response: AxiosError | AxiosResponse<{ notices: INotice }> | null\r\n  ) => {\r\n    if (response !== null && !axios.isAxiosError(response)) {\r\n      setNoticeById(response.data.notices);\r\n    } \r\n  };\r\n\r\n  const moreInfoHandler = async (id: string) => {\r\n    if (category) {\r\n      setCurrentCategory(category);\r\n    }\r\n    navigate(`/notices/${id}`, { replace: true });\r\n    const response = await fetchNoticeById(id);\r\n    await responseHandle(response);\r\n    await setModalOpenState(true);\r\n  };\r\n\r\n  const updateFavouriteStatus = async (data: {\r\n    id: string;\r\n    favouriteStatus: boolean;\r\n    singleNotice: boolean;\r\n  }) => {\r\n    try {\r\n      const response = await patchFavouriteStatus(data);\r\n      if (\r\n        (category === \"favorite ads\" || data.singleNotice) &&\r\n        data?.favouriteStatus === false\r\n      ) {\r\n        const newNoticeList = notices.filter(\r\n          (notice) => notice._id !== data.id\r\n        );\r\n        setNotices(newNoticeList);\r\n      }\r\n      setFavouriteList(response.data.favouriteList);\r\n    } catch (error) {\r\n     if (axios.isAxiosError(error)) {\r\n      setError(error)\r\n      errorToastEmitter(error.response?.data.message)\r\n     } \r\n     return null\r\n    }\r\n  };\r\n\r\n  const handleNoticeDelete = async (id: string) => {\r\n    try {\r\n      await deleteNotice(id);\r\n      handleDelete(id);\r\n      succesToastEmitter(\"notice succsefuly deleted\")\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        errorToastEmitter(error.response?.data.message)\r\n      }\r\n      return null\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (modalOpenState === false) {\r\n      navigate(`/notices/${currentCategory}`, { replace: true });\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [modalOpenState]);\r\n\r\n  return (\r\n    <>\r\n      <NoticesList>\r\n        {notices &&\r\n          notices.map((notice) => (\r\n            <NoticeContainer key={notice._id}>\r\n              <Notice\r\n                error={error}\r\n                notice={notice}\r\n                singleNotice={false}\r\n                updateFavouriteStatus={updateFavouriteStatus}\r\n                isLoggedIn={isLoggedIn}\r\n                favouriteList={favouriteList}\r\n              ></Notice>\r\n              <NoticeButtonList>\r\n                <NoticeButtonListItem>\r\n                  <NoticeButton\r\n                    type=\"button\"\r\n                    onClick={() => moreInfoHandler(notice._id)}\r\n                  >\r\n                    Learn more\r\n                  </NoticeButton>\r\n                </NoticeButtonListItem>\r\n                <NoticeButtonListItem>\r\n                  {user !== undefined &&\r\n                    user !== null &&\r\n                    Array.isArray(user.ownNoticeId) &&\r\n                    user.ownNoticeId.includes(notice._id) && (\r\n                      <NoticeButton\r\n                        type=\"button\"\r\n                        onClick={() => handleNoticeDelete(notice._id)}\r\n                      >\r\n                        Delete&nbsp;&nbsp;\r\n                        <HiMiniTrash\r\n                          style={{ width: \"20px\", height: \"20px\" }}\r\n                        />\r\n                      </NoticeButton>\r\n                    )}\r\n                </NoticeButtonListItem>\r\n              </NoticeButtonList>\r\n            </NoticeContainer>\r\n          ))}\r\n      </NoticesList>\r\n      {modalOpenState && (\r\n        <ModalWindow toggleModal={toggleModal}>\r\n          <ModalCloseButton type=\"button\" onClick={toggleModal}>\r\n            <RxCross2 style={{ width: \"15px\", height: \"15px\" }} />\r\n          </ModalCloseButton>\r\n          <Notice\r\n            error={error}\r\n            notice={noticeById === undefined ? null : noticeById}\r\n            singleNotice={true}\r\n            updateFavouriteStatus={updateFavouriteStatus}\r\n            isLoggedIn={isLoggedIn}\r\n            favouriteList={favouriteList}\r\n          ></Notice>\r\n        </ModalWindow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const CategoryRadioList = styled.fieldset`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border: none;\r\n  gap: 8px;\r\n  padding: 0;\r\n`;\r\nexport const ActiveRadioLabel = styled.label`\r\n  border: 2px solid #f59256;\r\n  background-color: #f59256;\r\n  border-radius: 40px;\r\n\r\n  padding: 8px 28px;\r\n  text-align: center;\r\n\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\nexport const PassiveRadioLabel = styled.label`\r\n  border: 2px solid #f59256;\r\n  background-color: transparent;\r\n  border-radius: 40px;\r\n\r\n  padding: 8px 28px;\r\n  text-align: center;\r\n  \r\n  color: black;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\nexport const CategoryRadioInput = styled.input`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  border: 0;\r\n  padding: 0;\r\n\r\n  white-space: nowrap;\r\n  clip-path: inset(100%);\r\n  clip: rect(0 0 0 0);\r\n  overflow: hidden;\r\n`;\r\n","import { ICreatedNotice } from \"../../interfaces/noticeIntefaces\";\r\nimport {\r\n  ActiveRadioLabel,\r\n  CategoryRadioInput,\r\n  CategoryRadioList,\r\n  PassiveRadioLabel,\r\n} from \"./categoryRadio.styled\";\r\n\r\ninterface IRadio {\r\n  formData: ICreatedNotice;\r\n  setFormData: (notice: ICreatedNotice) => void\r\n}\r\n\r\nexport const CategoryRadio = ({ formData, setFormData }: IRadio) => {\r\n  return (\r\n    <CategoryRadioList>\r\n        {formData.category === \"sell\" ? (\r\n          <ActiveRadioLabel htmlFor=\"sell\">\r\n            sell\r\n            <CategoryRadioInput\r\n              type=\"radio\"\r\n              id=\"sell\"\r\n              value=\"sell\"\r\n              onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n            />\r\n          </ActiveRadioLabel>\r\n        ) : (\r\n          <PassiveRadioLabel htmlFor=\"sell\">\r\n            sell\r\n            <CategoryRadioInput\r\n              type=\"radio\"\r\n              id=\"sell\"\r\n              value=\"sell\"\r\n              onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n            />\r\n          </PassiveRadioLabel>\r\n        )}\r\n        {formData.category === \"lost/found\" ? (\r\n          <ActiveRadioLabel htmlFor=\"lost/found\">\r\n            lost/found\r\n            <CategoryRadioInput\r\n              type=\"radio\"\r\n              id=\"lost/found\"\r\n              value=\"lost/found\"\r\n              onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n            />\r\n          </ActiveRadioLabel>\r\n        ) : (\r\n          <PassiveRadioLabel htmlFor=\"lost/found\">\r\n            lost/found\r\n            <CategoryRadioInput\r\n              type=\"radio\"\r\n              id=\"lost/found\"\r\n              value=\"lost/found\"\r\n              onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n            />\r\n          </PassiveRadioLabel>\r\n        )}\r\n\r\n        {formData.category === \"in good hands\" ? (\r\n          <ActiveRadioLabel htmlFor=\"in good hands\">\r\n            in good hands\r\n            <CategoryRadioInput\r\n              type=\"radio\"\r\n              id=\"in good hands\"\r\n              value=\"in good hands\"\r\n              onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n            />\r\n          </ActiveRadioLabel>\r\n        ) : (\r\n          <PassiveRadioLabel htmlFor=\"in good hands\">\r\n            in good hnads\r\n            <CategoryRadioInput\r\n              type=\"radio\"\r\n              id=\"in good hands\"\r\n              value=\"in good hands\"\r\n              onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n            />\r\n          </PassiveRadioLabel>\r\n        )}\r\n    </CategoryRadioList>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { FormInput } from \"../FormElements/FormElements.styled\";\r\n\r\nexport const AddNoticeModalContainer = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    width: 608px;\r\n  }\r\n`;\r\n\r\nexport const AddNoticeContainer = styled.form`\r\n  padding: 0  20px 20px 20px;\r\n  @media screen and (min-width: 768px) {\r\n    padding: 0 80px 20px 80px;\r\n  }\r\n`;\r\n\r\nexport const AddNoticeHeading = styled.h1`\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 36px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\nexport const AddNoticeMotivation = styled.p`\r\n  padding: 20px 0px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 20px;\r\n    padding-bottom: 28px 0px;\r\n  }\r\n`;\r\n\r\nexport const AddNoticeList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  margin-bottom: 40px;\r\n  @media screen and (min-width: 768px) {\r\n    gap: 28px;\r\n  }\r\n`;\r\n\r\nexport const AddNoticeLabel = styled.label`\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nexport const PriceDirection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const AddNoticeInput = styled(FormInput)`\r\n  margin-top: 8px;\r\n  background-color: rgba(253, 247, 242, 1);\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: 12px;\r\n    max-width: 448px;\r\n  }\r\n`;\r\nexport const AddNoticeComments = styled.textarea`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 280px;\r\n  min-height: 40px;\r\n\r\n  margin-top: 8px;\r\n  padding: 12px 14px;\r\n\r\n  border-radius: 40px;\r\n  resize: none;\r\n\r\n  background-color: rgba(253, 247, 242, 1);\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n\r\n  overflow: hidden;\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: 12px;\r\n    max-width: 448px;\r\n    min-height: 113px;\r\n    border-radius: 20px;\r\n  }\r\n`;\r\n\r\nexport const NextButton = styled.button`\r\n  border: 2px solid #f59256;\r\n  background-color: #f59256;\r\n  border-radius: 40px;\r\n  width: 280px;\r\n\r\n  padding: 8px 28px;\r\n  text-align: center;\r\n\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const AddNoticeButtonList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SexList = styled.fieldset`\r\n  margin-top: 16px;\r\n  border: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 40px;\r\n`;\r\n\r\nexport const SexIconContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  @media screen and (min-width: 768px) {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nexport const SexLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const PassiveSexText = styled.span`\r\n  font-size: 18px;\r\n  font-size: 500;\r\n  color: #000;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\nexport const ActiveSexText = styled.span`\r\n  font-size: 18px;\r\n  font-size: 500;\r\n  color: rgba(245, 146, 86, 1);\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 20px;\r\n  };\r\n`;\r\n\r\nexport const SexRadio = styled.input`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  border: 0;\r\n  padding: 0;\r\n\r\n  white-space: nowrap;\r\n  clip-path: inset(100%);\r\n  clip: rect(0 0 0 0);\r\n  overflow: hidden;\r\n`;\r\n","import { IoMdFemale } from \"react-icons/io\";\r\nimport { IoMdMale } from \"react-icons/io\";\r\nimport {\r\n  SexList,\r\n  SexRadio,\r\n  SexLabel,\r\n  PassiveSexText,\r\n  ActiveSexText,\r\n  SexIconContainer,\r\n} from \"./sexRadioButton.styled\";\r\nimport { ICreatedNotice } from \"../../interfaces/noticeIntefaces\";\r\n\r\ninterface ISexProps {\r\n  formData: ICreatedNotice;\r\n  setFormData: (notice: ICreatedNotice) => void;\r\n}\r\nexport const SexRadioButton = ({ formData, setFormData }: ISexProps) => {\r\n  return (\r\n    <SexList>\r\n      <SexLabel htmlFor=\"male\">\r\n        <SexIconContainer>\r\n          <IoMdMale\r\n            style={{\r\n              color: \"rgba(35, 194, 239, 1)\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n          />\r\n        </SexIconContainer>\r\n        <SexRadio\r\n          name=\"sex\"\r\n          id=\"male\"\r\n          type=\"radio\"\r\n          value=\"male\"\r\n          onChange={(e) => setFormData({ ...formData, sex: e.target.value })}\r\n        />\r\n        {formData.sex === \"male\" ? (\r\n          <ActiveSexText>Male</ActiveSexText>\r\n        ) : (\r\n          <PassiveSexText>Male</PassiveSexText>\r\n        )}\r\n      </SexLabel>\r\n      <SexLabel htmlFor=\"female\">\r\n        <SexIconContainer>\r\n          <IoMdFemale\r\n            style={{\r\n              color: \"rgba(255, 135, 135, 1)\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n          />\r\n        </SexIconContainer>\r\n        <SexRadio\r\n          id=\"female\"\r\n          name=\"sex\"\r\n          type=\"radio\"\r\n          value=\"female\"\r\n          onChange={(e) => setFormData({ ...formData, sex: e.target.value })}\r\n        />\r\n        {formData.sex === \"female\" ? (\r\n          <ActiveSexText>Female</ActiveSexText>\r\n        ) : (\r\n          <PassiveSexText>Female</PassiveSexText>\r\n        )}\r\n      </SexLabel>\r\n    </SexList>\r\n  );\r\n};\r\n\r\n\r\n","import * as yup from \"yup\";\r\n\r\nexport let addNoticeFirstSchema = yup.object({\r\n  breed: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"breed field is empty\")\r\n    .max(28, \"breed is too long(max 28)\")\r\n    .min(3, \"breed is too short(min 3)\"),\r\n  birthDate: yup.string().required(\"set pet`s birth date\"),\r\n  name: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"name field is empty\")\r\n    .max(28, \"name is too long(max 28)\")\r\n    .min(3, \"name is too short(min 3)\"),\r\n  title: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"title field is empty\")\r\n    .max(28, \"title is too long(max 28)\")\r\n    .min(3, \"title is too short(min 3)\"),\r\n});\r\n\r\nexport let addNoticeSecondSchema = yup.object({\r\n  comments: yup.string().trim().max(64, \"coments is too long(max 64)\"),\r\n  avatar: yup.string().required(\"set pet`s avatar\"),\r\n  price: yup.string().trim().max(10, \"price is too long\"),\r\n  location: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"location field is empty\")\r\n    .max(28, \"location is too long(max 28)\")\r\n    .min(3, \"location is too short(min 3)\"),\r\n  sex: yup.string().required(\"set pet`s sex\"),\r\n});\r\n","import { useState } from \"react\";\r\nimport { MainButton, SecondaryButton } from \"../Button/button.styled\";\r\nimport { CategoryRadio } from \"./categoryRadio\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  AddNoticeButtonList,\r\n  AddNoticeComments,\r\n  AddNoticeContainer,\r\n  AddNoticeHeading,\r\n  AddNoticeInput,\r\n  AddNoticeLabel,\r\n  AddNoticeList,\r\n  AddNoticeModalContainer,\r\n  AddNoticeMotivation,\r\n  NextButton,\r\n  PriceDirection,\r\n} from \"./addNoticeForm.styled\";\r\nimport { DropZone } from \"../Dropzone/dropzone\";\r\nimport { SexRadioButton } from \"./sexRadioButton\";\r\nimport { addNotices } from \"../../api/noticesAPI\";\r\nimport {\r\n  InputContainer,\r\n  SpecialFieldError,\r\n} from \"../FormElements/FormElements.styled\";\r\nimport { FormMark } from \"../FornMarks/formMarks\";\r\nimport birthDayNormalizer from \"../../Helpers/birthdayNormalizer\";\r\nimport {\r\n  addNoticeFirstSchema,\r\n  addNoticeSecondSchema,\r\n} from \"../../validationSchemas/addNoticeSchema\";\r\nimport { IUser } from \"../../interfaces/authInterface\";\r\nimport { ICreatedNotice, INotice } from \"../../interfaces/noticeIntefaces\";\r\nimport { IError } from \"../../interfaces/errorInterface\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { errorToastEmitter, succesToastEmitter } from \"../Toaster/toaste\";\r\n\r\ninterface IAddNoticeProps {\r\n  user: IUser | null;\r\n  toggleModal: () => void;\r\n  handleNotice: (newNotice: INotice) => void;\r\n}\r\n\r\nexport const AddNoticeForm = ({\r\n  user,\r\n  toggleModal,\r\n  handleNotice,\r\n}: IAddNoticeProps) => {\r\n  if (user === null) {\r\n    throw new Error(\"unauthorised\");\r\n  }\r\n\r\n  const initialState = {\r\n    category: \"sell\",\r\n    title: \"\",\r\n    name: \"\",\r\n    birthDate: \"\",\r\n    breed: \"\",\r\n    sex: \"\",\r\n\r\n    location: \"\",\r\n    comments: \"\",\r\n    price: \"\",\r\n    avatar: \"\",\r\n    owner: user._id,\r\n    email: user.email,\r\n    phoneNumber: user.phoneNumber,\r\n  };\r\n\r\n  const errorInitalState = {\r\n    message: \"\",\r\n    status: null,\r\n  };\r\n\r\n  const [firstFormStage, setFirstFormStage] = useState<boolean>(true);\r\n  const [formData, setFormData] = useState<ICreatedNotice>(initialState);\r\n  const [error, setError] = useState<IError | AxiosError>(errorInitalState);\r\n\r\n  const nextFormStage = async () => {\r\n    try {\r\n      await addNoticeFirstSchema.validate(formData);\r\n    } catch (error) {\r\n      if (error instanceof yup.ValidationError) {\r\n        return setError({ message: error.message, status: null });\r\n      }\r\n    }\r\n    setFirstFormStage(false);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      await addNoticeSecondSchema.validate(formData);\r\n    } catch (error) {\r\n      if (error instanceof yup.ValidationError) {\r\n        return setError({ message: error.message, status: null });\r\n      }\r\n    }\r\n\r\n    const normalBirthday = birthDayNormalizer(formData.birthDate);\r\n    try {\r\n      const response = await addNotices({\r\n        ...formData,\r\n        birthDate: normalBirthday,\r\n      });\r\n\r\n      handleNotice(response.data.newNotice);\r\n\r\n      succesToastEmitter(\"notice created\");\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        setError(error);\r\n        errorToastEmitter(error.response?.data.message)\r\n      }\r\n      return null;\r\n    }\r\n    setFirstFormStage(true)\r\n    setFormData(initialState);\r\n    toggleModal();\r\n  };\r\n\r\n  const avatarInputHandler = (path: string) => {\r\n    setFormData({ ...formData, avatar: path });\r\n  };\r\n\r\n  return (\r\n    <AddNoticeModalContainer>\r\n      <AddNoticeHeading>Add pet</AddNoticeHeading>\r\n      <AddNoticeContainer onSubmit={handleSubmit}>\r\n        {firstFormStage ? (\r\n          <>\r\n            <AddNoticeMotivation>\r\n              Don't wait any longer, give your furry friend the care and love\r\n              they deserve by adding them to our family today!\r\n            </AddNoticeMotivation>\r\n            <AddNoticeList>\r\n              <li>\r\n                <CategoryRadio\r\n                  formData={formData}\r\n                  setFormData={setFormData}\r\n                ></CategoryRadio>\r\n              </li>\r\n              <li>\r\n                <InputContainer>\r\n                  <AddNoticeLabel htmlFor=\"title\">Tittle of ad:</AddNoticeLabel>\r\n                  <AddNoticeInput\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={formData.title}\r\n                    onChange={(e) => {\r\n                      setFormData({ ...formData, title: e.target.value });\r\n                    }}\r\n                    placeholder=\"Type title of ad\"\r\n                  />\r\n                  {error.message.length >= 1 &&\r\n                    error.message.includes(\"title\") && (\r\n                      <FormMark message={error.message}></FormMark>\r\n                    )}\r\n                </InputContainer>\r\n              </li>\r\n              <li>\r\n                <InputContainer>\r\n                  <AddNoticeLabel htmlFor=\"name\">Name pet:</AddNoticeLabel>\r\n                  <AddNoticeInput\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={(e) => {\r\n                      setFormData({ ...formData, name: e.target.value });\r\n                    }}\r\n                    placeholder=\"Type pet`s name \"\r\n                  />\r\n                  {error.message.length >= 1 &&\r\n                    error.message.includes(\"name\") && (\r\n                      <FormMark message={error.message}></FormMark>\r\n                    )}\r\n                </InputContainer>\r\n              </li>\r\n              <li>\r\n                <InputContainer>\r\n                  <AddNoticeLabel htmlFor=\"birthDate\">\r\n                    Date of birth:\r\n                  </AddNoticeLabel>\r\n                  <AddNoticeInput\r\n                    type=\"date\"\r\n                    name=\"birthDate\"\r\n                    min=\"1950-01-01\"\r\n                    value={formData.birthDate}\r\n                    onChange={(e) => {\r\n                      setFormData({ ...formData, birthDate: e.target.value });\r\n                    }}\r\n                  />\r\n                </InputContainer>\r\n                {error.message === \"set pet`s birth date\" && (\r\n                  <SpecialFieldError>birthday field is empty</SpecialFieldError>\r\n                )}\r\n              </li>\r\n              <li>\r\n                <InputContainer>\r\n                  <AddNoticeLabel htmlFor=\"breed\">Breed</AddNoticeLabel>\r\n                  <AddNoticeInput\r\n                    type=\"text\"\r\n                    name=\"breed\"\r\n                    value={formData.breed}\r\n                    onChange={(e) => {\r\n                      setFormData({ ...formData, breed: e.target.value });\r\n                    }}\r\n                    placeholder=\"Type pet`s breed\"\r\n                  />\r\n                  {error.message.length >= 1 &&\r\n                    error.message.includes(\"breed\") && (\r\n                      <FormMark message={error.message}></FormMark>\r\n                    )}\r\n                </InputContainer>\r\n              </li>\r\n            </AddNoticeList>\r\n            <AddNoticeButtonList>\r\n              <NextButton type=\"button\" onClick={nextFormStage}>\r\n                Next\r\n              </NextButton>\r\n              <SecondaryButton type=\"button\" onClick={() => toggleModal()}>\r\n                Cancel\r\n              </SecondaryButton>\r\n            </AddNoticeButtonList>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <AddNoticeList>\r\n              <li>\r\n                <AddNoticeLabel> Choose pet sex:</AddNoticeLabel>\r\n                <SexRadioButton\r\n                  formData={formData}\r\n                  setFormData={setFormData}\r\n                ></SexRadioButton>\r\n                {error.message === \"set pet`s sex\" && (\r\n                  <SpecialFieldError>{error.message}</SpecialFieldError>\r\n                )}\r\n              </li>\r\n              <li>\r\n                <InputContainer>\r\n                  <AddNoticeLabel htmlFor=\"location\">Location:</AddNoticeLabel>\r\n                  <AddNoticeInput\r\n                    type=\"text\"\r\n                    name=\"location\"\r\n                    value={formData.location}\r\n                    onChange={(e) => {\r\n                      setFormData({ ...formData, location: e.target.value });\r\n                    }}\r\n                    placeholder=\"Type location of pet\"\r\n                  />\r\n                  {error.message.length >= 1 &&\r\n                    error.message.includes(\"location\") && (\r\n                      <FormMark message={error.message}></FormMark>\r\n                    )}\r\n                </InputContainer>\r\n              </li>\r\n              <li>\r\n                {formData.category === \"sell\" && (\r\n                  <PriceDirection>\r\n                    <AddNoticeLabel htmlFor=\"price\">Price:</AddNoticeLabel>\r\n                    <AddNoticeInput\r\n                      type=\"text\"\r\n                      name=\"price\"\r\n                      value={formData.price}\r\n                      onChange={(e) => {\r\n                        setFormData({ ...formData, price: e.target.value });\r\n                      }}\r\n                      placeholder=\"Type pet`s price\"\r\n                    />\r\n                    {error.message === \"price is too long\" && (\r\n                      <FormMark message={error.message}></FormMark>\r\n                    )}\r\n                  </PriceDirection>\r\n                )}\r\n              </li>\r\n              <li>\r\n                <AddNoticeLabel>Load the pet’s image:</AddNoticeLabel>\r\n                <DropZone avatarInputHandler={avatarInputHandler}></DropZone>\r\n                {error.message === \"set pet`s avatar\" && (\r\n                  <SpecialFieldError>{error.message}</SpecialFieldError>\r\n                )}\r\n              </li>\r\n              <li>\r\n                <AddNoticeLabel htmlFor=\"comments\">Comments:</AddNoticeLabel>\r\n                <AddNoticeComments\r\n                  name=\"comments\"\r\n                  value={formData.comments}\r\n                  onChange={(e) => {\r\n                    setFormData({ ...formData, comments: e.target.value });\r\n                  }}\r\n                  placeholder=\"Type something about pet\"\r\n                />\r\n                {error.message === \"coments is too long(max 64)\" && (\r\n                  <SpecialFieldError>{error.message}</SpecialFieldError>\r\n                )}\r\n              </li>\r\n            </AddNoticeList>\r\n            <AddNoticeButtonList>\r\n              <MainButton type=\"submit\">Done</MainButton>\r\n              <SecondaryButton\r\n                type=\"button\"\r\n                onClick={() => setFirstFormStage(true)}\r\n              >\r\n                Back\r\n              </SecondaryButton>\r\n            </AddNoticeButtonList>\r\n          </>\r\n        )}\r\n      </AddNoticeContainer>\r\n    </AddNoticeModalContainer>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { FindPetCategoryList } from \"../../Components/CategoryList/categoryList\";\r\nimport { FindPetSearchBar } from \"../../Components/FindPetSearchBar/findPetSearchBar\";\r\nimport {\r\n  AddNoticeButton,\r\n  AddNoticeWrapper,\r\n  ButtonAddContainer,\r\n  FindPetContainer,\r\n  FindPetHero,\r\n  FindPetStyledContainer,\r\n} from \"./findPetPage.styled\";\r\nimport { Notices } from \"../../Components/Notices/notices\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { ModalWindow } from \"../../Components/Modal/modal\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { ModalCloseButton } from \"../../Components/Modal/modal.styled\";\r\nimport { AddNoticeForm } from \"../../Components/AddNoticeForm/addNoticeForm\";\r\nimport { currentUser } from \"../../Redux/operations\";\r\nimport { getIsLoggedIn, getUser } from \"../../Redux/selectors\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { INotice } from \"../../interfaces/noticeIntefaces\";\r\nimport { useAppDispatch, useAppSelector } from \"../../customHooks/customHooks\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { ErrorFiller } from \"../../Components/Error/error\";\r\n\r\nconst FindPetPage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [noticesList, setNoticesList] = useState<INotice[] | null>(null);\r\n  const [modalOpenState, setModalOpenState] = useState<boolean>(false);\r\n  const [error, setError] = useState<AxiosError | null>(null);\r\n\r\n  const isLoggedIn = useAppSelector(getIsLoggedIn);\r\n  const navigate = useNavigate();\r\n\r\n  const handleDelete = (id: string) => {\r\n    if (noticesList) {\r\n      const newNotices = noticesList.filter(\r\n        (notice: INotice) => notice._id !== id\r\n      );\r\n      setNoticesList(newNotices);\r\n    }\r\n  };\r\n\r\n  const handleAddNotice = (newNotice: INotice) => {\r\n    if (noticesList) {\r\n      setNoticesList([...noticesList, newNotice]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      dispatch(currentUser());\r\n    }\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  const user = useAppSelector(getUser);\r\n\r\n  const toggleModal = () => {\r\n    setModalOpenState(!modalOpenState);\r\n  };\r\n\r\n  const handleNoticeAddition = () => {\r\n    if (!isLoggedIn) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  const dataHandler = (\r\n    response: AxiosError | AxiosResponse<{notices: INotice[]}> | null\r\n  ) => {\r\n    if (response !== null && !axios.isAxiosError(response)) {\r\n      setNoticesList(response.data.notices);\r\n    } else if (response !== null && axios.isAxiosError(response)) {\r\n      setError(response);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <FindPetContainer>\r\n      <FindPetHero>Find your favourite pet</FindPetHero>\r\n      <FindPetSearchBar dataHandler={dataHandler}></FindPetSearchBar>\r\n      <FindPetStyledContainer>\r\n        <FindPetCategoryList dataHandler={dataHandler}></FindPetCategoryList>\r\n        <AddNoticeButton type=\"button\" onClick={handleNoticeAddition}>\r\n          <ButtonAddContainer>\r\n            <FiPlus style={{ width: \"22px\", height: \"22px\" }} />\r\n          </ButtonAddContainer>\r\n          <AddNoticeWrapper>Add pet</AddNoticeWrapper>\r\n        </AddNoticeButton>\r\n      </FindPetStyledContainer>\r\n      {error === null ? (\r\n        <Notices\r\n          noticesList={noticesList}\r\n          user={user !== null ? user : null}\r\n          handleDelete={handleDelete}\r\n        ></Notices>\r\n      ) : <ErrorFiller></ErrorFiller>}\r\n\r\n      {modalOpenState && (\r\n        <ModalWindow toggleModal={toggleModal} modalOpenState={modalOpenState}>\r\n          <AddNoticeForm\r\n            user={user}\r\n            toggleModal={toggleModal}\r\n            handleNotice={handleAddNotice}\r\n          ></AddNoticeForm>\r\n          <ModalCloseButton type=\"button\" onClick={toggleModal}>\r\n            <RxCross2 style={{ width: \"15px\", height: \"15px\" }} />\r\n          </ModalCloseButton>\r\n        </ModalWindow>\r\n      )}\r\n    </FindPetContainer>\r\n  );\r\n};\r\n\r\nexport default FindPetPage;\r\n","import styled from \"styled-components\"\r\n\r\nexport const MainButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: #F59256;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  \r\n  width: 100%;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    width: 280px\r\n  }\r\n`\r\n\r\nexport const SecondaryButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: transparent;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n  \r\n  width: 100%;\r\n  color: black;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    width: 280px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\n\r\nexport const AuthMainButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: #F59256;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  \r\n  width: 100%;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`\r\n\r\nexport const AuthSecondaryButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: transparent;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n  \r\n  width: 100%;\r\n  color: black;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`"],"names":["date","splitedDate","split","FormInput","styled","input","FormButtonContainer","div","FormListItem","li","FormLabel","label","InputContainer","SpecialFieldError","p","Backdrop","Modal","ModalCloseButton","button","FormMarkWrapper","FormHint","FormMark","_ref","message","_jsxs","_Fragment","children","_jsx","GoXCircleFill","style","width","height","ErrorContainer","ErrorHeading","h1","ErrorPhrase","ErrorImg","img","ErrorFiller","src","SadPepe","alt","DropZoneContainer","DropZoneImage","DropZone","avatarInputHandler","fileWhiteList","cryptImage","setCryptImage","useState","onDrop","useCallback","acceptedFiles","includes","type","convertToBase64","then","base64String","imageString","catch","error","console","window","alert","getRootProps","getInputProps","useDropzone","BsPlusLg","color","file","Promise","resolve","reject","reader","FileReader","onload","result","Error","onerror","readAsDataURL","ModalWindow","toggleModal","modalOpenState","useEffect","handleKeyDown","e","code","addEventListener","removeEventListener","document","body","overflow","pointerEvents","onClickHandle","target","length","modalRoot","getElementById","createPortal","onClick","stopPropagation","PetCategoryList","ul","ActiveCategory","MainButton","InActiveCategory","SecondaryButton","axios","defaults","baseURL","fetchNoticesByCategory","async","get","category","FindPetCategoryList","dataHandler","setCategory","navigate","useNavigate","isLoggedIn","useSelector","getIsLoggedIn","categoryChangeHandler","textContent","replace","fetchNotices","response","getOwnNotices","getFavouriteNotices","isAxiosError","PetSearchBarLabel","PetSearchBar","SearchIconContainer","NoticeClearTextButton","FindPetSearchBar","searchQuerry","setSearchQuerry","params","setSearchParams","useSearchParams","location","useLocation","throtledFunction","throttle","title","value","fetchNoticeByTitle","Array","isArray","fetchByCategory","pathname","htmlFor","name","placeholder","onChange","IoSearch","handleInputClear","RxCrossCircled","FindPetContainer","FindPetHero","FindPetStyledContainer","AddNoticeButton","AddNoticeWrapper","span","ButtonAddContainer","NoticesList","NoticeContainer","NoticeButtonList","NoticeButtonListItem","NoticeButton","SingleNoticeContainer","withConfig","shouldForwardProp","prop","props","singleNotice","SingleStyleContainer","FavouriteNoticeButton","NoticeCategory","NoticeTitle","h2","NoticeInfoList","NoticeInfo","NoticeInfoWrapper","NoticeAwatarWraper","NoticeAvatar","ContactList","ComentsWraper","ContactListItem","ContactButton","a","FavouriteButton","birthDate","dateArray","petAliveDays","Number","now","Date","age","getDay","getMonth","getFullYear","Math","floor","Notice","notice","updateFavouriteStatus","favouriteList","handleFavouriteChange","id","favouriteStatus","avatar","_id","IoHeartSharp","IoHeartOutline","breed","sex","email","phoneNumber","ageCalc","price","comments","href","Notices","noticesList","user","handleDelete","setModalOpenState","currentCategory","setCurrentCategory","setFavouriteList","notices","setNotices","noticeById","setNoticeById","setError","useParams","useAppSelector","dispatch","useAppDispatch","currentUser","favouriteNoticeId","moreInfoHandler","fetchNoticeById","data","responseHandle","patch","patchFavouriteStatus","newNoticeList","filter","_error$response","errorToastEmitter","handleNoticeDelete","delete","deleteNotice","succesToastEmitter","_error$response2","map","undefined","ownNoticeId","HiMiniTrash","RxCross2","CategoryRadioList","fieldset","ActiveRadioLabel","PassiveRadioLabel","CategoryRadioInput","CategoryRadio","formData","setFormData","AddNoticeModalContainer","AddNoticeContainer","form","AddNoticeHeading","AddNoticeMotivation","AddNoticeList","AddNoticeLabel","PriceDirection","AddNoticeInput","AddNoticeComments","textarea","NextButton","AddNoticeButtonList","SexList","SexIconContainer","SexLabel","PassiveSexText","ActiveSexText","SexRadio","SexRadioButton","IoMdMale","IoMdFemale","addNoticeFirstSchema","yup","trim","required","max","min","addNoticeSecondSchema","AddNoticeForm","handleNotice","initialState","owner","firstFormStage","setFirstFormStage","status","onSubmit","preventDefault","validate","normalBirthday","birthDayNormalizer","post","addNotices","newNotice","path","FindPetPage","setNoticesList","getUser","handleNoticeAddition","FiPlus","newNotices","AuthMainButton","AuthSecondaryButton"],"sourceRoot":""}