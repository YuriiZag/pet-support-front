{"version":3,"file":"static/js/606.9c24ef07.chunk.js","mappings":"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","sources":["Components/FormElements/FormElements.styled.ts","Components/RegistrationForm/registrationForm.styled.ts","validationSchemas/registerUserSchema.ts","Components/RegistrationForm/registrationForm.tsx","pages/registerPage/registerPage.styled.ts","pages/registerPage/registerPage.tsx","Components/PageHint/pageHint.styled.ts","Components/PageHint/pageHint.tsx","Components/FornMarks/formMarks.styled.ts","Components/FornMarks/formMarks.tsx","Components/Button/button.styled.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormInput = styled.input`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 280px;\r\n  padding: 12px 14px;\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  background-color: transparent;\r\n  ::placeholder {\r\n    color: rgba(17, 17, 17, 0.6);\r\n    font-weight: 400px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\nexport const FormButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 280px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const FormListItem = styled.li`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  position: relative;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  position: relative;\r\n  max-width: 280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const SpecialFieldError = styled.p`\r\n  margin-top: 4px;\r\n  margin-left: 32px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: rgba(60, 188, 129, 1);\r\n`;\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const RegForm = styled.form`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n`;\r\n\r\nexport const RegFormList = styled.ul`\r\n  width: 280px;\r\n  margin-bottom: 28px;\r\n  padding: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 24px;\r\n`;\r\n\r\nexport const RegFormButtonList = styled.div`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  margin-bottom: 40px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 14px;\r\n\r\n`;\r\n","import * as yup from \"yup\";\r\n\r\nexport let registerUserFirstSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .trim()\r\n    .email(\"enter valid email\")\r\n    .required(\"email field is empty\"),\r\n  password: yup\r\n    .string()\r\n    .trim()\r\n    .min(6, \"password is too short(min 6)\")\r\n    .max(32, \"password is too long(max 32)\")\r\n    .required(\"password field is empty\"),\r\n});\r\n\r\nexport let registerUserSecondSchema = yup.object({\r\n  phoneNumber: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"phone number field is empty\")\r\n    .max(20, \"Phone number is too long\"),\r\n  city: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"city field is empty\")\r\n    .max(32, \"Addres is too long(max 32)\"),\r\n  name: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"name field is empty\")\r\n    .max(32, \"name is too long(max 32)\")\r\n    .min(3, \"name is too short(min 3)\"),\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  RegForm,\r\n  RegFormButtonList,\r\n  RegFormList,\r\n} from \"./registrationForm.styled\";\r\nimport { AuthMainButton, AuthSecondaryButton } from \"../Button/button.styled\";\r\nimport {\r\n  FormButtonContainer,\r\n  FormInput,\r\n  FormLabel,\r\n  FormListItem,\r\n} from \"../FormElements/FormElements.styled\";\r\nimport { FormMark } from \"../FornMarks/formMarks\";\r\nimport { regUser } from \"../../Redux/operations\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getError } from \"../../Redux/selectors\";\r\nimport {\r\n  registerUserFirstSchema,\r\n  registerUserSecondSchema,\r\n} from \"../../validationSchemas/registerUserSchema\";\r\nimport { useAppDispatch, useAppSelector } from \"../../customHooks/customHooks\";\r\nimport { IError } from \"../../interfaces/errorInterface\";\r\n\r\ninterface IFormData {\r\n  email: string;\r\n  password: string;\r\n  passwordConfirmation: string;\r\n  name: string;\r\n  city: string;\r\n  phoneNumber: string;\r\n}\r\n\r\n\r\n\r\nexport const RegistationForm = () => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const error = useAppSelector(getError);\r\n\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\",\r\n    name: \"\",\r\n    city: \"\",\r\n    phoneNumber: \"\",\r\n  };\r\n\r\n  const errorInitalState = {\r\n    message: \"\",\r\n    status: null,\r\n  };\r\n  \r\n  const [nextFormPage, setFormPageState] = useState<boolean>(false);\r\n  const [formData, setFormData] = useState<IFormData>(initialState);\r\n  const [errorMessage, setErrorMessage] = useState<IError>(errorInitalState);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      setErrorMessage(error);\r\n    }\r\n  }, [error]);\r\n\r\n  const firstPageValidation = async () => {\r\n    if (formData.password !== formData.passwordConfirmation) {\r\n      throw new Error(\"password fields do not match\");\r\n    }\r\n    try {\r\n      await registerUserFirstSchema.validate(formData, { abortEarly: false });\r\n    } catch (error: unknown) {\r\n      if (error instanceof yup.ValidationError) {\r\n        throw new Error(error.errors[0]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formStageHandler = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    const text = (e.target as HTMLButtonElement).textContent;\r\n\r\n    if (text === \"Next\") {\r\n      try {\r\n        await firstPageValidation();\r\n        setFormPageState(true);\r\n      } catch (error) { \r\n        const errorMessage =\r\n          error instanceof Error ? error.message : \"unknown error\";\r\n        return setErrorMessage({ message: errorMessage, status: null });\r\n      }\r\n    }\r\n\r\n    if (text === \"Back\") {\r\n      setFormPageState(false);\r\n    }\r\n  };\r\n\r\n  const registerHandler = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await registerUserSecondSchema.validate(formData);\r\n    } catch (error) {\r\n      if (error instanceof yup.ValidationError) {\r\n        return setErrorMessage({ message: error.message, status: null });\r\n      }\r\n    }\r\n\r\n    try {\r\n      await dispatch(regUser(formData)).unwrap();\r\n      setFormData(initialState);\r\n      navigate(\"/login\");\r\n    } catch (err) {\r\n      const errorMessage =\r\n        error instanceof Error ? error.message : \"unknown error\";\r\n      setErrorMessage({ message: errorMessage, status: null });\r\n    }\r\n    setFormPageState(false);\r\n  };\r\n\r\n  const imputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setErrorMessage(errorInitalState);\r\n    switch (e.target.name) {\r\n      case \"email\":\r\n        setFormData({ ...formData, email: e.target.value });\r\n        break;\r\n      case \"password\":\r\n        setFormData({ ...formData, password: e.target.value });\r\n        break;\r\n      case \"passwordConfirmation\":\r\n        setFormData({ ...formData, passwordConfirmation: e.target.value });\r\n        break;\r\n      case \"name\":\r\n        setFormData({ ...formData, name: e.target.value });\r\n        break;\r\n      case \"city\":\r\n        setFormData({ ...formData, city: e.target.value });\r\n        break;\r\n      case \"phoneNumber\":\r\n        setFormData({ ...formData, phoneNumber: e.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RegForm onSubmit={registerHandler}>\r\n      {nextFormPage === false && (\r\n        <>\r\n          <RegFormList>\r\n            <FormListItem>\r\n              <FormLabel htmlFor=\"email\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={imputChangeHandler}\r\n                  value={formData.email}\r\n                />\r\n                {((errorMessage.message.length >= 1 &&\r\n                  errorMessage.message.includes(\"email\")) ||\r\n                  errorMessage.status === 409) && (\r\n                  <FormMark message={errorMessage.message}></FormMark>\r\n                )}\r\n              </FormLabel>\r\n            </FormListItem>\r\n            <FormListItem>\r\n              <FormLabel htmlFor=\"password\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={imputChangeHandler}\r\n                  value={formData.password}\r\n                />\r\n                {errorMessage.message.length >= 1 &&\r\n                  errorMessage.message.includes(\"password\") && (\r\n                    <FormMark message={errorMessage.message}></FormMark>\r\n                  )}\r\n              </FormLabel>\r\n            </FormListItem>\r\n            <FormListItem>\r\n              <FormLabel htmlFor=\"passwordConfirmation\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"passwordConfirmation\"\r\n                  placeholder=\"Confirm Password\"\r\n                  onChange={imputChangeHandler}\r\n                  value={formData.passwordConfirmation}\r\n                />\r\n                {errorMessage.message === \"password fields do not match\" && (\r\n                  <FormMark message={errorMessage.message}></FormMark>\r\n                )}\r\n              </FormLabel>\r\n            </FormListItem>\r\n          </RegFormList>\r\n          <FormButtonContainer>\r\n            <AuthMainButton type=\"button\" onClick={formStageHandler}>\r\n              Next\r\n            </AuthMainButton>\r\n          </FormButtonContainer>\r\n        </>\r\n      )}\r\n      {nextFormPage === true && (\r\n        <>\r\n          <RegFormList>\r\n            <FormListItem>\r\n              <FormLabel htmlFor=\"name\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  onChange={imputChangeHandler}\r\n                  value={formData.name}\r\n                />\r\n                {errorMessage.message.length >= 1 &&\r\n                  errorMessage.message.includes(\"name\") && (\r\n                    <FormMark message={errorMessage.message}></FormMark>\r\n                  )}\r\n              </FormLabel>\r\n            </FormListItem>\r\n            <FormListItem>\r\n              <FormLabel htmlFor=\"city\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  placeholder=\"City,region\"\r\n                  onChange={imputChangeHandler}\r\n                  value={formData.city}\r\n                />\r\n                {errorMessage.message.length >= 1 &&\r\n                  errorMessage.message.includes(\"city\") && (\r\n                    <FormMark message={errorMessage.message}></FormMark>\r\n                  )}\r\n              </FormLabel>\r\n            </FormListItem>\r\n            <FormListItem>\r\n              <FormLabel htmlFor=\"phoneNumber\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"phoneNumber\"\r\n                  placeholder=\"Mobile phone\"\r\n                  onChange={imputChangeHandler}\r\n                  value={formData.phoneNumber}\r\n                />\r\n                {errorMessage.message.length >= 1 &&\r\n                  errorMessage.message.includes(\"phone number\") && (\r\n                    <FormMark message={errorMessage.message}></FormMark>\r\n                  )}\r\n              </FormLabel>\r\n            </FormListItem>\r\n          </RegFormList>\r\n          <RegFormButtonList>\r\n            <AuthMainButton type=\"submit\">Register</AuthMainButton>\r\n            <AuthSecondaryButton type=\"button\" onClick={formStageHandler}>\r\n              Back\r\n            </AuthSecondaryButton>\r\n          </RegFormButtonList>\r\n        </>\r\n      )}\r\n    </RegForm>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport backgroundMobileImg from \"../../pictures/Vector.png\";\r\nimport backgroundTabletImg from \"../../pictures/loginTabletBackground.png\"\r\nimport backgroundPCImg from \"../../pictures/loginPcBackground.png\"\r\n\r\nexport const RegisterContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  padding: 0 20px;\r\n  height: 91.3vh;\r\n  \r\n  background-image: url(${backgroundMobileImg});\r\n  background-repeat: no-repeat;\r\n  background-position-x: center;\r\n  background-position-y: 280px;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  @media screen and (min-width: 768px) {\r\n    background-image: url(${backgroundTabletImg});\r\n    background-position-y: 400px;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    background-image: url(${backgroundPCImg});\r\n    background-position-y: 300px;\r\n  }\r\n`;\r\nexport const RegisterHeading = styled.h1`\r\n  text-align: center;\r\n  margin-top: 42px;\r\n  margin-bottom: 40px;\r\n  padding: 0;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const RegStyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  @media screen and (min-width: 768px) {\r\n    background-color: white;\r\n    border-radius: 40px;\r\n    width: 608px;\r\n    height: 500px;\r\n    margin-top: 80px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    width: 618px;\r\n  }\r\n`;\r\n","import { RegistationForm } from \"../../Components/RegistrationForm/registrationForm\";\r\nimport { RegisterContainer, RegisterHeading, RegStyledContainer } from \"./registerPage.styled\";\r\nimport { PageHint } from \"../../Components/PageHint/pageHint\";\r\nconst RegisterPage = () => {\r\n  return (\r\n    <RegisterContainer>\r\n      <RegStyledContainer>\r\n        <RegisterHeading>Registration</RegisterHeading>\r\n        <RegistationForm></RegistationForm>\r\n        <PageHint\r\n          hintMessage=\"Already have an account?\"\r\n          linkMessage=\"Login\"\r\n          linkPath=\"/login\"\r\n        ></PageHint>\r\n      </RegStyledContainer>\r\n    </RegisterContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PageHintPhrase = styled.p`\r\n    text-align: center;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: rgba(17, 17, 17, 0.6);\r\n`\r\nexport const PageLink = styled.a`\r\n    color: rgba(0, 0, 238, 0.6);\r\n    text-decoration: underline solid 1px;\r\n`","import { PageHintPhrase, PageLink } from \"./pageHint.styled\";\r\n\r\ninterface IHintProps {\r\n  hintMessage: string;\r\n  linkMessage: string;\r\n  linkPath: string;\r\n}\r\n\r\nexport const PageHint = ({ hintMessage, linkMessage, linkPath }: IHintProps) => {\r\n  return (\r\n    <PageHintPhrase>\r\n      {hintMessage} <PageLink href={linkPath}>{linkMessage}</PageLink>\r\n    </PageHintPhrase>\r\n  );\r\n};\r\n","import styled from \"styled-components\"\r\n\r\nexport const FormMarkWrapper = styled.div`\r\n position: absolute;\r\n color: red;\r\n right: 18px;\r\n bottom: 28px;\r\n`\r\n\r\nexport const FormHint = styled.p`\r\n margin-top: 4px;\r\n margin-left: 32px;\r\n font-size: 14px;\r\n font-weight: 400;\r\n color: rgba(60, 188, 129, 1);\r\n`","import { GoXCircleFill } from \"react-icons/go\";\r\nimport { FormHint, FormMarkWrapper } from \"./formMarks.styled\";\r\n\r\n\r\nexport const FormMark = ({ message }: { message: string}) => {\r\n  return (\r\n    <>\r\n      <FormMarkWrapper>\r\n        <GoXCircleFill\r\n          style={{ width: \"20px\", height: \"20px\" }}\r\n        ></GoXCircleFill>\r\n      </FormMarkWrapper>\r\n      <FormHint>{message}</FormHint>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import styled from \"styled-components\"\r\n\r\nexport const MainButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: #F59256;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  \r\n  width: 100%;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    width: 280px\r\n  }\r\n`\r\n\r\nexport const SecondaryButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: transparent;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n  \r\n  width: 100%;\r\n  color: black;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    width: 280px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\n\r\nexport const AuthMainButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: #F59256;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  \r\n  width: 100%;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`\r\n\r\nexport const AuthSecondaryButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: transparent;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n  \r\n  width: 100%;\r\n  color: black;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`"],"names":["FormInput","styled","input","FormButtonContainer","div","FormListItem","li","FormLabel","label","InputContainer","SpecialFieldError","p","RegForm","form","RegFormList","ul","RegFormButtonList","registerUserFirstSchema","yup","email","trim","required","password","min","max","registerUserSecondSchema","phoneNumber","city","name","RegistationForm","dispatch","useAppDispatch","navigate","useNavigate","error","useAppSelector","getError","initialState","passwordConfirmation","errorInitalState","message","status","nextFormPage","setFormPageState","useState","formData","setFormData","errorMessage","setErrorMessage","useEffect","formStageHandler","async","text","e","target","textContent","Error","validate","abortEarly","errors","firstPageValidation","imputChangeHandler","value","_jsxs","onSubmit","preventDefault","regUser","unwrap","err","children","_Fragment","_jsx","htmlFor","type","placeholder","onChange","length","includes","FormMark","AuthMainButton","onClick","AuthSecondaryButton","RegisterContainer","backgroundMobileImg","backgroundTabletImg","backgroundPCImg","RegisterHeading","h1","RegStyledContainer","RegisterPage","PageHint","hintMessage","linkMessage","linkPath","PageHintPhrase","PageLink","a","_ref","href","FormMarkWrapper","FormHint","GoXCircleFill","style","width","height","MainButton","button","SecondaryButton"],"sourceRoot":""}