{"version":3,"file":"static/js/206.9cdcaebe.chunk.js","mappings":"qIAAA,MAWA,EAX4BA,IACtB,GAAIA,EAAM,CACR,MAAMC,EAAwBD,EAAKE,MAAM,KAIzC,OAFED,EAAY,GAAK,IAAMA,EAAY,GAAK,IAAMA,EAAY,EAG9D,CACA,MAAO,gBAAgB,C,6FCNtB,MAAME,EAAYC,EAAAA,QAAOC,KAAK;;;;;;;;;;;;;;;;;EAmBxBC,EAAsBF,EAAAA,QAAOG,GAAG;;;;;;EAQhCC,EAAeJ,EAAAA,QAAOK,EAAE;;;;;;EAQxBC,EAAYN,EAAAA,QAAOO,KAAK;;;;EAMxBC,EAAiBR,EAAAA,QAAOG,GAAG;;;;;;;;EAY3BM,EAAoBT,EAAAA,QAAOU,CAAC;;;;;;oECrDlC,MAAMC,EAAWX,EAAAA,QAAOG,GAAG;;;;;;;;;;;;;;;EAiBrBS,EAAQZ,EAAAA,QAAOG,GAAG;;;;;;;;;;;;;EAelBU,EAAmBb,EAAAA,QAAOc,MAAM;;;;;;;;;;;;;;6FChCtC,MAAMC,EAAoBf,EAAAA,QAAOG,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+B9Ba,EAAehB,EAAAA,QAAOiB,EAAE;;;;;;;;;;;EAYxBC,EAAmBlB,EAAAA,QAAOiB,EAAE;;EAK5BE,EAAenB,EAAAA,QAAOc,MAAM;;;;;;;;;;EAYNd,EAAAA,QAAOG,GAAG;;;eC5DtC,MAAMiB,EAAoBpB,EAAAA,QAAOG,GAAG;;;;;;EAQ9BkB,EAAkBrB,EAAAA,QAAOsB,GAAG;;;;EAM5BC,EAAoBvB,EAAAA,QAAOO,KAAK;;;;;;;;;;;;;;;EAiBhCiB,EAAoBxB,EAAAA,QAAOC,KAAK;;;;;;;;;;;;EAchCwB,EAAoBzB,EAAAA,QAAO0B,IAAI;;;;6CClCrC,MAAMC,EAAaC,IAAqC,IAApC,OAAEC,GAA4BD,EACvD,MAAME,GAAWC,EAAAA,EAAAA,MAIVC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAwB,MAmB5D,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAClB,EAAiB,CAAAiB,UAChBC,EAAAA,EAAAA,KAACjB,EAAe,CACdkB,IAAoB,OAAfP,EAAsBA,EAAaH,EACxCW,IAAI,mBAGRL,EAAAA,EAAAA,MAACZ,EAAiB,CAAAc,SAAA,EAChBC,EAAAA,EAAAA,KAACd,EAAiB,CAChBiB,KAAK,OACLC,OAAO,6BACPC,SA7BmBC,IACzB,GAAuB,OAAnBA,EAAEC,OAAOC,MACX,MAAM,IAAIC,MAAM,uBAElBC,EAAAA,EAAAA,GAAgBJ,EAAEC,OAAOC,MAAM,IAC5BG,MAAMC,IACL,GAAIN,EAAEC,OAAOC,MAAO,CAClB,MAAMK,EAAc,QAAQP,EAAEC,OAAOC,MAAM,GAAGL,eAAeS,IAC7DjB,EAAckB,GAbMC,EAcDD,EAbzBrB,GAASuB,EAAAA,EAAAA,IAAW,CAAExB,OAAQuB,IAc1B,CAfsBA,KAetB,IAEDE,OAAOC,IACNC,QAAQD,MAAM,yBAA0BA,EAAM,GAC9C,KAiBAjB,EAAAA,EAAAA,KAACmB,EAAAA,IAAQ,CACPC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,MAAO,4BAGXvB,EAAAA,EAAAA,KAACb,EAAiB,CAAAY,SAAC,oBAEpB,EC1DMyB,EAAqB9D,EAAAA,QAAOG,GAAG;;;EAK/B4D,EAAgB/D,EAAAA,QAAO0B,IAAI;;;;;;;;;EAW3BsC,EAAkBhE,EAAAA,QAAO0B,IAAI;;;;;;;;;;;;;;;;EAiB7BuC,EAAejE,EAAAA,QAAOc,MAAM;;;;;;;;;;;;;;;;;;EAoB5BoD,EAAelE,EAAAA,QAAOmE,IAAI;;;;;;;;;EAW1BC,EAAgBpE,EAAAA,QAAOC,KAAK;;;;;;;;;;;;;;;;;;;;yBCxClC,MAAMoE,EAAgBzC,IASJ,IATK,UAC5B0C,EAAS,WACTC,EAAU,UACVC,EAAS,YACTC,EAAW,YACXC,EAAW,iBACXC,EAAgB,UAChBC,EAAS,KACTnC,EAAK,QACYb,EACjB,MAAOiD,EAAYC,IAAiB5C,EAAAA,EAAAA,UAAiBsC,GAOrD,OACErC,EAAAA,EAAAA,MAAC2B,EAAkB,CAAAzB,SAAA,EACjBC,EAAAA,EAAAA,KAACyB,EAAa,CAAA1B,SAAEkC,IACfG,EAAYK,kBAAoBT,GAC/BnC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC0B,EAAe,CAAA3B,SAAEwC,KAClBvC,EAAAA,EAAAA,KAAC2B,EAAY,CACXe,GAAIV,EACJ7B,KAAK,SACLwC,QAASR,EACTS,SAAUR,EAAYS,WACtBzB,MACGgB,EAAYS,WAET,CAAEtB,MAAO,yBADT,CAAEA,MAAO,yBAEdxB,UAEDC,EAAAA,EAAAA,KAAC8C,EAAAA,IAAa,CACZ1B,MAAO,CACLC,MAAO,OACPC,OAAQ,gBAMhBzB,EAAAA,EAAAA,MAAC+B,EAAY,CAACmB,SAhCEzC,IACpBA,EAAE0C,iBACFX,EAAiB,CAAC,CAACC,GAAYC,GAAY,EA8BFxC,SAAA,EACnCC,EAAAA,EAAAA,KAAC8B,EAAa,CACZ3B,KAAMA,EACN8C,MAAOV,EACPlC,SAAWC,GAAMkC,EAAclC,EAAEC,OAAO0C,UAE1CjD,EAAAA,EAAAA,KAAC2B,EAAY,CAACxB,KAAK,SAAQJ,UACzBC,EAAAA,EAAAA,KAACkD,EAAAA,IAAO,CACN9B,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,MAAO,kCAME,E,cC/DlB,MAAM4B,EAAeA,KAC1B,MAAMC,EAAe,CAAEP,YAAY,EAAOJ,gBAAkB,KACrDL,EAAaiB,IAAkBzD,EAAAA,EAAAA,UAAuBwD,GACvDE,GAAaC,EAAAA,EAAAA,GAAeC,EAAAA,IAC5BhE,GAAWC,EAAAA,EAAAA,MAEjBgE,EAAAA,EAAAA,YAAU,KACJH,GACF9D,GAASkE,EAAAA,EAAAA,MACX,GACC,CAAClE,EAAU8D,IAEd,MAAMnB,EAAe7B,IACnB,OAAQA,EAAEqD,cAAcjB,IACtB,IAAK,iBACHW,EAAe,CAAER,YAAY,EAAMJ,gBAAiB,mBACpD,MACF,IAAK,kBACHY,EAAe,CACbR,YAAY,EACZJ,gBAAiB,oBAEnB,MACF,IAAK,qBACHY,EAAe,CACbR,YAAY,EACZJ,gBAAiB,uBAEnB,MACF,IAAK,kBACHY,EAAe,CACbR,YAAY,EACZJ,gBAAiB,oBAEnB,MACF,IAAK,iBACHY,EAAe,CAAER,YAAY,EAAMJ,gBAAiB,mBACpD,MACF,QACEY,EAAeD,GAEnB,EAOIf,EAAoBvB,IACxBtB,GAASuB,EAAAA,EAAAA,IAAWD,IACpBuC,EAAeD,EAAa,EAExBQ,GAAOL,EAAAA,EAAAA,GAAeM,EAAAA,IAC5B,OAAKD,GAMH/D,EAAAA,EAAAA,MAACpB,EAAiB,CAAAsB,SAAA,EAChBC,EAAAA,EAAAA,KAACX,EAAU,CAACE,OAAQqE,EAAKrE,UACzBM,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAACnB,EAAY,CAAAqB,SAAA,EACXC,EAAAA,EAAAA,KAACpB,EAAgB,CAAAmB,UACfC,EAAAA,EAAAA,KAAC+B,EAAa,CACZC,UAAU,iBACVC,WAAW,QACXC,UAAW0B,EAAKE,KAChB3B,YAAaA,EACbC,YAAaA,GAAegB,EAC5Bf,iBAAkBA,EAClBC,UAAU,YAGdtC,EAAAA,EAAAA,KAACpB,EAAgB,CAAAmB,UACfC,EAAAA,EAAAA,KAAC+B,EAAa,CACZC,UAAU,kBACVC,WAAW,SACXC,UAAW0B,EAAKG,MAChB5B,YAAaA,EACbC,YAAaA,EACbC,iBAAkBA,EAClBC,UAAU,aAGdtC,EAAAA,EAAAA,KAACpB,EAAgB,CAAAmB,UACfC,EAAAA,EAAAA,KAAC+B,EAAa,CACZC,UAAU,qBACVC,WAAW,YACXC,UAAW0B,EAAKI,SAAWJ,EAAKI,SAAW,eAC3C7B,YAAaA,EACbC,YAAaA,GAAegB,EAC5Bf,iBAAkBA,EAClBC,UAAU,WACVnC,KAAK,YAGTH,EAAAA,EAAAA,KAACpB,EAAgB,CAAAmB,UACfC,EAAAA,EAAAA,KAAC+B,EAAa,CACZC,UAAU,kBACVC,WAAW,SACXC,UAAW0B,EAAKK,YAChB9B,YAAaA,EACbC,YAAaA,GAAegB,EAC5Bf,iBAAkBA,EAClBC,UAAU,mBAGdtC,EAAAA,EAAAA,KAACpB,EAAgB,CAAAmB,UACfC,EAAAA,EAAAA,KAAC+B,EAAa,CACZC,UAAU,iBACVC,WAAW,QACXC,UAAW0B,EAAKM,KAChB/B,YAAaA,EACbC,YAAaA,GAAegB,EAC5Bf,iBAAkBA,EAClBC,UAAU,eAIhBzC,EAAAA,EAAAA,MAAChB,EAAY,CAACsB,KAAK,SAASwC,QA5EbwB,KACnB3E,GAAS4E,EAAAA,EAAAA,MAAS,EA2EoCrE,SAAA,EAChDC,EAAAA,EAAAA,KAACqE,EAAAA,IAAQ,CACPjD,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,MAAO,2BAET,oBAzEDvB,EAAAA,EAAAA,KAACsE,EAAAA,EAAW,GA6EC,ECxJXC,EAAoB7G,EAAAA,QAAOG,GAAG;;;;;;;;;;;;;EAe9B2G,EAAqB9G,EAAAA,QAAOG,GAAG;;EAI/B4G,EAAqB/G,EAAAA,QAAOG,GAAG;;;EAK/B6G,EAAiBhH,EAAAA,QAAOU,CAAC;;;;;;;EAQzBuG,EAAkBjH,EAAAA,QAAOU,CAAC;;;EAI1BwG,EAAiBlH,EAAAA,QAAOG,GAAG;;;;;;;EAS3BgH,EAAenH,EAAAA,QAAOc,MAAM;;;;;;;;;;;;;;0EC5ClC,MAAMsG,EAAoBpH,EAAAA,QAAOG,GAAG;;;;EAM9BkH,EAAgBrH,EAAAA,QAAOsH,EAAE;;;;;EAOzBC,EAAkBvH,EAAAA,QAAOmE,IAAI;;;;;;EAQ7BqD,EAAaxH,EAAAA,QAAOiB,EAAE;;;;;;;EAStBwG,GAAczH,EAAAA,EAAAA,SAAOD,EAAAA,GAAU;;EAI/B2H,EAAc1H,EAAAA,QAAOO,KAAK;;;;;;;;EAU1BoH,EAAiB3H,EAAAA,QAAOO,KAAK;;;EAK7BqH,GAAqB5H,EAAAA,QAAOG,GAAG;;;;;;;EAS/B0H,GAAmB7H,EAAAA,QAAOG,GAAG;;;;;;;;EAU7B2H,GAAiB9H,EAAAA,QAAO+H,QAAQ;;;;;;;;;;;;;;;;;EAmBhCC,GAAmBhI,EAAAA,QAAOc,OAAOmH,MAAM,CAClDxF,KAAM,UACN;;;;;;;;;;;;;;;;;qDC1FK,IAAIyF,GAAoBC,EAAAA,GAAW,CACxCC,MAAOD,EAAAA,KAEJE,OACAC,SAAS,mBACTC,IAAI,GAAI,6BACRC,IAAI,EAAG,6BACVC,UAAWN,EAAAA,KAAaG,SAAS,wBACjClC,KAAM+B,EAAAA,KAEHE,OACAC,SAAS,kBACTC,IAAI,GAAI,4BACRC,IAAI,EAAG,8BAGDE,GAAqBP,EAAAA,GAAW,CACzCQ,SAAUR,EAAAA,KAAaE,OAAOE,IAAI,IAAK,iCACvC1G,OAAQsG,EAAAA,KAAaG,SAAS,sB,eC8BzB,MAAMM,GAAahH,IAAgD,IAA/C,YAAEiH,EAAW,WAAEC,GAA0BlH,EAClE,MAAMsE,GAAOL,EAAAA,EAAAA,GAAeM,EAAAA,IAC5B,GAAa,OAATD,EACF,MAAM,IAAInD,MAEZ,MAAMgG,EAAmB,CACvBC,QAAS,GACTC,OAAQ,MAEJC,EAAe,CACnB9C,KAAM,GACNqC,UAAW,GACXL,MAAO,GACPvG,OAAQ,GACR8G,SAAU,GACVQ,MAAOjD,EAAKkD,MAEPC,EAAUC,IAAepH,EAAAA,EAAAA,UAAoBgH,IAC7CK,EAAgBC,IAAqBtH,EAAAA,EAAAA,WAAkB,IACvDqB,EAAOkG,IAAYvH,EAAAA,EAAAA,UAA8B6G,GAElDW,EAAmBC,UACvB,MAAMC,EAAQhH,EAAEC,OAA6BgH,YAC7C,GAAa,SAATD,EAAiB,CACnB,UACQ1B,GAAkB4B,SAAST,EACnC,CAAE,MAAO9F,GACP,GAAIA,aAAiB4E,EAAAA,GACnB,OAAOsB,EAAS,CAAET,QAASzF,EAAMyF,QAASC,OAAQ,MAEtD,CACAO,GAAkB,EACpB,CACa,SAATI,GACFJ,GAAkB,EACpB,EAOIO,EACJnH,IAGA,OADA6G,EAASV,GACDnG,EAAEC,OAAOuD,MACf,IAAK,OACHkD,EAAY,IAAKD,EAAUjD,KAAMxD,EAAEC,OAAO0C,QAC1C,MACF,IAAK,YACH+D,EAAY,IAAKD,EAAUZ,UAAW7F,EAAEC,OAAO0C,QAC/C,MACF,IAAK,QACH+D,EAAY,IAAKD,EAAUjB,MAAOxF,EAAEC,OAAO0C,QAC3C,MACF,IAAK,WACH+D,EAAY,IAAKD,EAAUV,SAAU/F,EAAEC,OAAO0C,QAIlD,EAwCF,OACEpD,EAAAA,EAAAA,MAACiF,EAAiB,CAAA/E,SAAA,EAChBC,EAAAA,EAAAA,KAAC+E,EAAa,CAAAhF,SAAC,aACfC,EAAAA,EAAAA,KAACiF,EAAe,CAAClC,SAxCEsE,UACrB/G,EAAE0C,iBACF,UACQoD,GAAmBoB,SAAST,EACpC,CAAE,MAAO9F,GACP,GAAIA,aAAiB4E,EAAAA,GACnB,OAAOsB,EAAS,CAAET,QAASzF,EAAMyF,QAASC,OAAQ,MAEtD,CAEA,MAAMe,GAAiBC,EAAAA,GAAAA,GAAmBZ,EAASZ,WACnD,IACE,MAAMyB,OClHWP,WACrB,IAEE,aADuBQ,GAAAA,EAAMC,KAAK,QAASC,EAE7C,CAAE,MAAO9G,GACP,MAAMA,CACR,GD4G2B+G,CAAQ,IAC1BjB,EACHZ,UAAWuB,IAGblB,EAAWoB,EAAS9G,KAAKiH,MACzBE,EAAAA,GAAAA,GAAmB,YACrB,CAAE,MAAOhH,GAEyB,IAADiH,EAA/B,GAAIL,GAAAA,EAAMM,aAAalH,GACrBkG,EAASlG,IACTmH,EAAAA,GAAAA,GAAgC,QAAfF,EAACjH,EAAM2G,gBAAQ,IAAAM,OAAA,EAAdA,EAAgBpH,KAAK4F,SAEzC,OAAO,IACT,CACAM,EAAYJ,GACZM,GAAkB,GAClBX,GAAa,EAW+BxG,SACtCkH,GAgEApH,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACqF,EAAU,CAAAnF,SAAA,EACTC,EAAAA,EAAAA,KAAClC,EAAAA,GAAY,CAAAiC,UACXF,EAAAA,EAAAA,MAACyF,GAAkB,CAAAvF,SAAA,EACjBC,EAAAA,EAAAA,KAACqF,EAAc,CAAAtF,SAAC,mBAChBC,EAAAA,EAAAA,KAACqI,GAAAA,EAAQ,CAACC,mBAxIEC,IAC1BvB,EAAY,IAAKD,EAAUxH,OAAQgJ,GAAO,IAwIT,qBAAlBtH,EAAMyF,UACL1G,EAAAA,EAAAA,KAAC7B,EAAAA,GAAiB,CAAA4B,SAAEkB,EAAMyF,gBAIhC7G,EAAAA,EAAAA,MAAC/B,EAAAA,GAAY,CAAAiC,SAAA,EACXC,EAAAA,EAAAA,KAACoF,EAAW,CAACoD,QAAQ,WAAUzI,SAAC,cAChCF,EAAAA,EAAAA,MAAC3B,EAAAA,GAAc,CAAA6B,SAAA,EACbC,EAAAA,EAAAA,KAACwF,GAAc,CACb1B,KAAK,WACL2E,YAAY,gBACZpI,SAAUoH,EACVxE,MAAO8D,EAASV,WAEC,kCAAlBpF,EAAMyF,UACL1G,EAAAA,EAAAA,KAAC7B,EAAAA,GAAiB,CAAA4B,SAAEkB,EAAMyF,oBAKlC7G,EAAAA,EAAAA,MAAC0F,GAAgB,CAAAxF,SAAA,EACfC,EAAAA,EAAAA,KAAC0I,EAAAA,GAAU,CAACvI,KAAK,SAAQJ,SAAC,UAC1BC,EAAAA,EAAAA,KAAC2I,EAAAA,GAAe,CAACxI,KAAK,SAASwC,QAASyE,EAAiBrH,SAAC,gBA3F9DF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACqF,EAAU,CAAAnF,SAAA,EACTF,EAAAA,EAAAA,MAAC/B,EAAAA,GAAY,CAAAiC,SAAA,EACXC,EAAAA,EAAAA,KAACoF,EAAW,CAACoD,QAAQ,OAAMzI,SAAC,cAC5BF,EAAAA,EAAAA,MAAC3B,EAAAA,GAAc,CAAA6B,SAAA,EACbC,EAAAA,EAAAA,KAACmF,EAAW,CACVhF,KAAK,OACL2D,KAAK,OACL2E,YAAY,gBACZpI,SAAUoH,EACVxE,MAAO8D,EAASjD,OAEjB7C,EAAMyF,QAAQkC,QAAU,GACvB3H,EAAMyF,QAAQmC,SAAS,UACrB7I,EAAAA,EAAAA,KAAC8I,GAAAA,EAAQ,CAACpC,QAASzF,EAAMyF,iBAIjC7G,EAAAA,EAAAA,MAAC/B,EAAAA,GAAY,CAAAiC,SAAA,EACXC,EAAAA,EAAAA,KAACoF,EAAW,CAACoD,QAAQ,YAAWzI,SAAC,mBACjCF,EAAAA,EAAAA,MAAC3B,EAAAA,GAAc,CAAA6B,SAAA,EACbC,EAAAA,EAAAA,KAACmF,EAAW,CACVhF,KAAK,OACL2D,KAAK,YACLoC,IAAI,aACJ7F,SAAUoH,EACVxE,MAAO8D,EAASZ,YAEjBlF,EAAMyF,QAAQkC,QAAU,GACvB3H,EAAMyF,QAAQmC,SAAS,WACrB7I,EAAAA,EAAAA,KAAC7B,EAAAA,GAAiB,CAAA4B,SAAC,mCAM3BF,EAAAA,EAAAA,MAAC/B,EAAAA,GAAY,CAAAiC,SAAA,EACXC,EAAAA,EAAAA,KAACoF,EAAW,CAACoD,QAAQ,QAAOzI,SAAC,YAC7BF,EAAAA,EAAAA,MAAC3B,EAAAA,GAAc,CAAA6B,SAAA,EACbC,EAAAA,EAAAA,KAACmF,EAAW,CACVhF,KAAK,OACL2D,KAAK,QACL2E,YAAY,iBACZpI,SAAUoH,EACVxE,MAAO8D,EAASjB,QAEjB7E,EAAMyF,QAAQkC,QAAU,GACvB3H,EAAMyF,QAAQmC,SAAS,WACrB7I,EAAAA,EAAAA,KAAC8I,GAAAA,EAAQ,CAACpC,QAASzF,EAAMyF,oBAKnC7G,EAAAA,EAAAA,MAAC0F,GAAgB,CAAAxF,SAAA,EACfC,EAAAA,EAAAA,KAAC0F,GAAgB,CAACvF,KAAK,SAASwC,QAASyE,EAAiBrH,SAAC,UAG3DC,EAAAA,EAAAA,KAAC2I,EAAAA,GAAe,CAACxI,KAAK,SAASwC,QAnEhBoG,KACzBxC,IACAS,EAAYJ,EAAa,EAiE4C7G,SAAC,qBAyClD,EE5PXiJ,GAAWtL,EAAAA,QAAOiB,EAAE;;;;;;;;;;;;;EAepBsK,GAAevL,EAAAA,QAAOK,EAAE;;;;;;;;;;;;;EAexBmL,GAAiBxL,EAAAA,QAAOsB,GAAG;;;;;;;;EAU3BmK,GAAczL,EAAAA,QAAOiB,EAAE;;;;;;EAQvByK,GAAc1L,EAAAA,QAAOK,EAAE;;;EAIvBsL,GAAe3L,EAAAA,QAAO0B,IAAI;;;;;;EAQ1BkK,GAAkB5L,EAAAA,QAAOc,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;EC3C/B+K,GAAWjK,IAAgD,IAA/C,SAAEkK,EAAQ,aAAEC,GAA6BnK,EAEhE,OACEU,EAAAA,EAAAA,KAACgJ,GAAQ,CAAAjJ,SACNyJ,EAASE,KAAK3B,IAEXlI,EAAAA,EAAAA,MAACoJ,GAAY,CAAAlJ,SAAA,EACXC,EAAAA,EAAAA,KAACkJ,GAAc,CAACjJ,IAAK8H,EAAIxI,OAAQW,IAAI,eACrCL,EAAAA,EAAAA,MAACsJ,GAAW,CAAApJ,SAAA,EACVF,EAAAA,EAAAA,MAACuJ,GAAW,CAAArJ,SAAA,EACVC,EAAAA,EAAAA,KAACqJ,GAAY,CAAAtJ,SAAC,cACbgI,EAAIjE,SAEPjE,EAAAA,EAAAA,MAACuJ,GAAW,CAAArJ,SAAA,EACVC,EAAAA,EAAAA,KAACqJ,GAAY,CAAAtJ,SAAC,wBACbgI,EAAI5B,cAEPtG,EAAAA,EAAAA,MAACuJ,GAAW,CAAArJ,SAAA,EACVC,EAAAA,EAAAA,KAACqJ,GAAY,CAAAtJ,SAAC,eACbgI,EAAIjC,UAEPjG,EAAAA,EAAAA,MAACuJ,GAAW,CAAArJ,SAAA,EACVC,EAAAA,EAAAA,KAACqJ,GAAY,CAAAtJ,SAAC,kBACbgI,EAAI1B,gBAGTrG,EAAAA,EAAAA,KAACsJ,GAAe,CACdnJ,KAAK,SACLwC,QAASA,KACP8G,EAAa1B,EAAIjB,IAAI,EACrB/G,UAEFC,EAAAA,EAAAA,KAAC2J,EAAAA,IAAW,CAACvI,MAAO,CAAEC,MAAO,OAAQC,OAAQ,cA1B9ByG,EAAIjB,QA+BlB,ECqDf,GApFiB8C,KACf,MAAOC,EAAgBC,IAAqBlK,EAAAA,EAAAA,WAAkB,IACvD4J,EAAUO,IAAenK,EAAAA,EAAAA,UAAiB,KAC1CqB,EAAOkG,IAAYvH,EAAAA,EAAAA,UAA4B,MAoBhDoK,EAAkB3C,UACtB,IACE,MAAMO,OH/CaP,WACvB,IAEE,aADuBQ,GAAAA,EAAMoC,IAAI,QAEnC,CAAE,MAAOhJ,GACP,MAAMA,CACR,GGyC2BiJ,GACvBH,EAAYnC,EAAS9G,KAAKqJ,KAC5B,CAAE,MAAOlJ,GAKP,OAJI4G,GAAAA,EAAMM,aAAalH,IACrBkG,EAASlG,GAGJ,IACT,GAEIsF,EAAcA,KAClBuD,GAAmBD,EAAe,EAOpC,OAJApG,EAAAA,EAAAA,YAAU,KACRuG,GAAiB,GAChB,KAGDnK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAC0E,EAAiB,CAAAxE,SAAA,EAChBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAC0E,EAAc,CAAA3E,SAAC,qBAChBC,EAAAA,EAAAA,KAACmD,EAAY,QAEftD,EAAAA,EAAAA,MAAC2E,EAAkB,CAAAzE,SAAA,EACjBF,EAAAA,EAAAA,MAAC+E,EAAc,CAAA7E,SAAA,EACbC,EAAAA,EAAAA,KAAC0E,EAAc,CAAA3E,SAAC,cAChBF,EAAAA,EAAAA,MAAC4E,EAAkB,CAAA1E,SAAA,EACjBC,EAAAA,EAAAA,KAAC2E,EAAe,CAAA5E,SAAC,aACjBC,EAAAA,EAAAA,KAAC6E,EAAY,CAAClC,QAAS4D,EAAYxG,UACjCC,EAAAA,EAAAA,KAACoK,EAAAA,IAAM,CAAChJ,MAAO,CAAEC,MAAO,OAAQC,OAAQ,kBAI7CL,GACCjB,EAAAA,EAAAA,KAACsE,EAAAA,EAAW,KAEZtE,EAAAA,EAAAA,KAACuJ,GAAQ,CACPC,SAAUA,EACVC,aAxDQpC,UAClB,SHdqBA,WACvB,IAEE,aADuBQ,GAAAA,EAAMwC,OAAO,SAAS3H,IAE/C,CAAE,MAAOzB,GACP,MAAMA,CACR,GGSQqJ,CAAU5H,GAChB,MAAM6H,EAAcf,EAASgB,QAAQzC,GAAcA,EAAIjB,MAAQpE,UACzDqH,EAAYQ,SACZtC,EAAAA,GAAAA,GAAmB,0BACzB,CAAE,MAAOhH,GACyB,IAADiH,EAA/B,GAAIL,GAAAA,EAAMM,aAAalH,IACrBmH,EAAAA,GAAAA,GAAgC,QAAfF,EAACjH,EAAM2G,gBAAQ,IAAAM,OAAA,EAAdA,EAAgBpH,KAAK4F,SAEzC,OAAO,IACT,WAkDGmD,IACChK,EAAAA,EAAAA,MAAC4K,EAAAA,EAAW,CAAClE,YAAaA,EAAYxG,SAAA,EACpCC,EAAAA,EAAAA,KAACsG,GAAU,CACTC,YAAaA,EACbC,WArEU1F,IAClBiJ,EAAY,IAAIP,EAAU1I,GAAM,KAsE1Bd,EAAAA,EAAAA,KAACzB,EAAAA,GAAgB,CAAC4B,KAAK,SAASwC,QAAS4D,EAAYxG,UACnDC,EAAAA,EAAAA,KAAC0K,EAAAA,IAAQ,CAACtJ,MAAO,CAAEC,MAAO,OAAQC,OAAQ,iBAI/C,C,0DCxGA,MAAMqJ,EAAkBjN,EAAAA,QAAOG,GAAG;;;;;EAO5B+M,EAAWlN,EAAAA,QAAOU,CAAC;;;;;;eCLzB,MAAM0K,EAAWxJ,IAAsC,IAArC,QAAEoH,GAA6BpH,EACtD,OACEO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC2K,EAAe,CAAA5K,UACdC,EAAAA,EAAAA,KAAC6K,EAAAA,GAAa,CACZzJ,MAAO,CAAEC,MAAO,OAAQC,OAAQ,aAGpCtB,EAAAA,EAAAA,KAAC4K,EAAQ,CAAA7K,SAAE2G,MACV,C,0GCXA,MAAMoE,EAAiBpN,EAAAA,QAAOG,GAAG;;;;;;;;;;;;;EAe3BkN,EAAerN,EAAAA,QAAOsH,EAAE;;;;EAKxBgG,EAActN,EAAAA,QAAOU,CAAC;;;;;;;;EAUtB6M,EAAWvN,EAAAA,QAAOsB,GAAG;;;;;eCxB3B,MAAMsF,EAAcA,KAEvBzE,EAAAA,EAAAA,MAACiL,EAAc,CAAA/K,SAAA,EACbC,EAAAA,EAAAA,KAACiL,EAAQ,CAAChL,IAAKiL,EAAShL,IAAI,cAC5BL,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAC+K,EAAY,CAAAhL,SAAC,iBACdC,EAAAA,EAAAA,KAACgL,EAAW,CAAAjL,SAAC,4B,oECZd,MAAMoL,EAAoBzN,EAAAA,QAAOG,GAAG;;;;;;;;;;;EAa9BuN,EAAgB1N,EAAAA,QAAOsB,GAAG;;;;mCCThC,MAAMqJ,EAAW/I,IAIjB,IAJkB,mBACvBgJ,GAGDhJ,EACC,MAAM+L,EAAgB,CACpB,YACA,aACA,aACA,YACA,cAIK3L,EAAYC,IAAiBC,EAAAA,EAAAA,UAAwB,MAEtD0L,GAASC,EAAAA,EAAAA,cACZC,IACMH,EAAcxC,SAAS2C,EAAc,GAAGrL,OAK7CO,EAAAA,EAAAA,GAAgB8K,EAAc,IAC3B7K,MAAMC,IAGL,MAAMC,EAAc,QAAQ2K,EAAc,GAAGrL,eAAeS,IAC5DjB,EAAckB,GACdyH,EAAmBzH,EAAY,IAEhCG,OAAOC,IACNC,QAAQD,MAAM,yBAA0BA,EAAM,IAbhDwK,OAAOC,MAAM,kDAcX,GAIN,CAACpD,KAGG,aAAEqD,EAAY,cAAEC,IAAkBC,EAAAA,EAAAA,IAAY,CAAEP,WAEtD,OACEzL,EAAAA,EAAAA,MAACsL,EAAiB,IAAKQ,IAAc5L,SAAA,EACnCC,EAAAA,EAAAA,KAAA,YAAW4L,MACK,OAAflM,GACCM,EAAAA,EAAAA,KAAC8L,EAAAA,IAAQ,CACP1K,MAAO,CACLG,MAAO,wBACPF,MAAO,OACPC,OAAQ,WAIZtB,EAAAA,EAAAA,KAACoL,EAAa,CAACnL,IAAKP,EAAYQ,IAAI,aAEpB,C,kCC3CxB,QAnBA,SAAyB6L,GACvB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,KACd,MAAMC,EAASH,EAAOG,OAClBA,EACFL,EAAQK,EAAO9O,MAAM,KAAK,IAE1B0O,EAAO,IAAIzL,MAAM,uBACnB,EAGF0L,EAAOI,QAAWtL,GAAUiL,EAAOjL,GAEnCkL,EAAOK,cAAcT,EAAK,GAE9B,C,6ECJO,MAAMtB,EAAcnL,IAIa,IAJZ,SAC1BS,EAAQ,YACRwG,EAAW,eACXsD,GACYvK,GAEZmE,EAAAA,EAAAA,YAAU,KACR,MAAMgJ,EAAiBnM,IACN,WAAXA,EAAEoM,MACJnG,GACF,EAKF,OAFAkF,OAAOkB,iBAAiB,UAAWF,GAE5B,IAAMhB,OAAOmB,oBAAoB,UAAWH,EAAc,KAGnEhJ,EAAAA,EAAAA,YAAU,KACJoG,IACFgD,SAASC,KAAK1L,MAAM2L,SAAW,SAC/BF,SAASC,KAAK1L,MAAM4L,cAAgB,OACpCH,SAASC,KAAK1L,MAAM2L,SAAW,GAC/BF,SAASC,KAAK1L,MAAM4L,cAAgB,IAE/B,KACLH,SAASC,KAAK1L,MAAM2L,SAAW,GAC/BF,SAASC,KAAK1L,MAAM4L,cAAgB,EAAE,IAEvC,CAACnD,IAEJ,MAAMoD,EAAiB3M,IACrB,MAAMC,EAASD,EAAEC,OACbA,GAAqC,IAA3BA,EAAOR,SAAS6I,QAC5BrC,GACF,EAEI2G,EAAgCL,SAASM,eAAe,cAC9D,OAAKD,GAGDA,GACKE,EAAAA,EAAAA,eACLpN,EAAAA,EAAAA,KAAC3B,EAAAA,GAAQ,CAACsE,QAASsK,EAAclN,UAC/BC,EAAAA,EAAAA,KAAC1B,EAAAA,GAAK,CAACqE,QAAUrC,GAAMA,EAAE+M,kBAAkBtN,SAAEA,MAE/CmN,GARmB,IAYZ,C,4EC7DN,MAAMxE,EAAahL,EAAAA,QAAOc,MAAM;;;;;;;;;;;;;;;;EAkB1BmK,EAAkBjL,EAAAA,QAAOc,MAAM;;;;;;;;;;;;;;;;;EAoB/B8O,EAAiB5P,EAAAA,QAAOc,MAAM;;;;;;;;;;;;;EAe9B+O,EAAsB7P,EAAAA,QAAOc,MAAM","sources":["Helpers/birthdayNormalizer.ts","Components/FormElements/FormElements.styled.ts","Components/Modal/modal.styled.ts","Components/UserInfoCard/userInfoCard.styled.ts","Components/UserInfoCard/userAvatar.styled.ts","Components/UserInfoCard/userAvatar.tsx","Components/UserInfoCard/userInfoField.styled.ts","Components/UserInfoCard/userInfoField.tsx","Components/UserInfoCard/userInfoCard.tsx","pages/userPage/userPage.styled.ts","Components/AddPetForm/addPetForm.styled.ts","validationSchemas/addPetSchema.ts","Components/AddPetForm/addPetForm.tsx","api/petsAPI.ts","Components/PetsData/petsData.styled.ts","Components/PetsData/petsData.tsx","pages/userPage/userPage.tsx","Components/FornMarks/formMarks.styled.ts","Components/FornMarks/formMarks.tsx","Components/Error/error.styled.ts","Components/Error/error.tsx","Components/Dropzone/dropzone.styled.ts","Components/Dropzone/dropzone.tsx","Helpers/imageConverter.ts","Components/Modal/modal.tsx","Components/Button/button.styled.ts"],"sourcesContent":["const birthDayNormalizer = (date: string | undefined): string => {\r\n      if (date) {\r\n        const splitedDate: string[] = date.split(\"-\");\r\n        const normalizedDate: string =\r\n          splitedDate[2] + \".\" + splitedDate[1] + \".\" + splitedDate[0];\r\n    \r\n        return normalizedDate;\r\n      }\r\n      return \"birthday error\"\r\n  };\r\n\r\nexport default birthDayNormalizer","import styled from \"styled-components\";\r\n\r\nexport const FormInput = styled.input`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 280px;\r\n  padding: 12px 14px;\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  background-color: transparent;\r\n  ::placeholder {\r\n    color: rgba(17, 17, 17, 0.6);\r\n    font-weight: 400px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\nexport const FormButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 280px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const FormListItem = styled.li`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  position: relative;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  position: relative;\r\n  max-width: 280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const SpecialFieldError = styled.p`\r\n  margin-top: 4px;\r\n  margin-left: 32px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: rgba(60, 188, 129, 1);\r\n`;\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  backdrop-filter: blur(10px);\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1200;\r\n  padding: 20px;\r\n  overflow: auto;\r\n  pointer-events: auto;\r\n`;\r\n\r\nexport const Modal = styled.div`\r\n  position: relative;\r\n  overflow: auto;\r\n  pointer-events: auto;\r\n  border-radius: 20px;\r\n  width: auto;\r\n\r\n  background-color: white;\r\n  z-index: 1201;\r\n\r\n  @media screen and (width < 768px) {\r\n    width: 280px;\r\n  }\r\n`;\r\n\r\nexport const ModalCloseButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background-color: #fdf7f2;\r\n\r\n  width: 34px;\r\n  height: 34px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserCardContainer = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\r\n  padding: 20px 16px;\r\n  margin-bottom: 47px;\r\n  margin-top: 18px;\r\n  \r\n\r\n  @media screen and (min-width: 768px) {\r\n    justify-content: space-between;\r\n    flex-direction: row-reverse;\r\n\r\n    margin-left: -32px;\r\n    border-radius: 0 20px 20px 0;\r\n    padding: 24px 32px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    flex-direction: column;\r\n    margin-top: 24px;\r\n  }\r\n`;\r\n\r\n\r\nexport const UserInfoList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n\r\n  margin-top: 32px;\r\n  margin-bottom: 44px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-bottom: 28px;\r\n  }\r\n`;\r\nexport const UserInfoListItem = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\n\r\nexport const LogOutButton = styled.button`\r\n  display: flex;\r\n  align-self: flex-end;\r\n\r\n  color: rgba(17, 17, 17, 0.6);\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n\r\nexport const InfoStyledContainer = styled.div`\r\n\r\n\r\n`","import styled from \"styled-components\";\r\n\r\nexport const UserAvatarWrapper = styled.div`\r\n  border-radius: 50%;\r\n  width: 233px;\r\n  height: 233px;\r\n  background-color: rgba(245, 146, 86, 0.5);\r\n\r\n`;\r\n\r\nexport const UserAvatarImage = styled.img`\r\n  border-radius: 50%;\r\n  width: 233px;\r\n  height: 233px;\r\n`\r\n\r\nexport const ChangeAvatarLabel = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-self: flex-end;\r\n\r\n  margin-top: 14px;\r\n  @media screen and (min-width: 768px) {\r\n    position: absolute;\r\n    right: 20px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    top: 231px;\r\n    right: 16px;\r\n  }\r\n`;\r\n\r\nexport const ChangeAvatarInput = styled.input`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  border: 0;\r\n  padding: 0;\r\n\r\n  white-space: nowrap;\r\n  clip-path: inset(100%);\r\n  clip: rect(0 0 0 0);\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ButtonTextWrapper = styled.span`\r\n  margin-left: 4px;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n`;","import { useState } from \"react\";\r\nimport {\r\n  UserAvatarImage,\r\n  UserAvatarWrapper,\r\n  ChangeAvatarLabel,\r\n  ChangeAvatarInput,\r\n  ButtonTextWrapper,\r\n} from \"./userAvatar.styled\";\r\nimport convertToBase64 from \"../../Helpers/imageConverter\";\r\nimport { HiCamera } from \"react-icons/hi2\";\r\nimport { updateUser } from \"../../Redux/operations\";\r\nimport { useAppDispatch } from \"../../customHooks/customHooks\";\r\n\r\nexport const UserAvatar = ({ avatar }: { avatar: string }) => {\r\n  const dispatch = useAppDispatch();\r\n  const handleAvatarUpdate = (data: string) => {\r\n    dispatch(updateUser({ avatar: data }));\r\n  };\r\n  const [cryptImage, setCryptImage] = useState<string | null>(null);\r\n\r\n  const onFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files === null) {\r\n      throw new Error(\"file list is empty\");\r\n    }\r\n    convertToBase64(e.target.files[0])\r\n      .then((base64String) => {\r\n        if (e.target.files) {\r\n          const imageString = `data:${e.target.files[0].type};base64,${base64String}`;\r\n          setCryptImage(imageString);\r\n          handleAvatarUpdate(imageString);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error converting file:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserAvatarWrapper>\r\n        <UserAvatarImage\r\n          src={cryptImage !== null ? cryptImage : avatar}\r\n          alt=\"user avatar\"\r\n        />\r\n      </UserAvatarWrapper>\r\n      <ChangeAvatarLabel>\r\n        <ChangeAvatarInput\r\n          type=\"file\"\r\n          accept=\".png,.webp,.jpeg,.svg,.jpg\"\r\n          onChange={onFileInputChange}\r\n        />\r\n        <HiCamera\r\n          style={{\r\n            width: \"20px\",\r\n            height: \"20px\",\r\n            color: \"rgba(245, 146, 86, 1)\",\r\n          }}\r\n        />\r\n        <ButtonTextWrapper>Edit photo</ButtonTextWrapper>\r\n      </ChangeAvatarLabel>\r\n    </>\r\n  );\r\n};\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const InfoFieldContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const UserInfoLabel = styled.span`\r\n  display: block;\r\n  width: 56px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 18px;\r\n    width: 83px;\r\n  }\r\n`;\r\n\r\nexport const UserInfoWrapper = styled.span`\r\n  display: block;\r\n  width: 117px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n\r\n  margin-right: 33px;\r\n  margin-left: 26px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 18px;\r\n    width: 175px;\r\n\r\n    margin-right: 53px;\r\n    margin-left: 36px;\r\n  }\r\n`;\r\nexport const UserInfoEdit = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 20px;\r\n  height: 20px;\r\n  padding: 4px;\r\n\r\n  background-color: rgba(253, 247, 242, 1);\r\n  border: none;\r\n  border-radius: 50%;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: 32px;\r\n    width: 32px;\r\n    padding: 6px;\r\n  }\r\n`;\r\n\r\nexport const UserEditForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-left: 8px;\r\n  justify-self: center;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-left: 24px;\r\n  }\r\n`;\r\n\r\nexport const UserEditInput = styled.input`\r\n  padding: 4px 18px;\r\n  box-sizing: border-box;\r\n  margin-right: 9px;\r\n\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  width: 159px;\r\n\r\n  border-radius: 40px;\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  background-color: rgba(253, 247, 242, 1);\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 216px;\r\n    padding: 4px 12px;\r\n    font-size: 18px;\r\n\r\n    margin-right: 24px;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport {\r\n  UserInfoLabel,\r\n  UserInfoWrapper,\r\n  UserInfoEdit,\r\n  UserEditForm,\r\n  UserEditInput,\r\n  InfoFieldContainer,\r\n} from \"./userInfoField.styled\";\r\nimport { IoPencilSharp } from \"react-icons/io5\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\n\r\nimport { IUpdateField } from \"./userInfoCard\";\r\n\r\ninterface IInfoFieldProps{\r\n  fieldName: string;\r\n  fieldLabel: string;\r\n  fieldData: string;\r\n  handleClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  updateField: IUpdateField;\r\n  handleUserUpdate: (data: Record<string, string>) => void;\r\n  objectKey: string;\r\n  type?: string;\r\n}\r\n\r\n\r\nexport const UserInfoField = ({\r\n  fieldName,\r\n  fieldLabel,\r\n  fieldData,\r\n  handleClick,\r\n  updateField,\r\n  handleUserUpdate,\r\n  objectKey,\r\n  type=\"text\"\r\n} : IInfoFieldProps) => {\r\n  const [inputValue, setInputValue] = useState<string>(fieldData);\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    handleUserUpdate({[objectKey]: inputValue})\r\n    \r\n};\r\n\r\n  return (\r\n    <InfoFieldContainer>\r\n      <UserInfoLabel>{fieldLabel}</UserInfoLabel>\r\n      {updateField.updateFieldName !== fieldName ? (\r\n        <>\r\n          <UserInfoWrapper>{inputValue}</UserInfoWrapper>\r\n          <UserInfoEdit\r\n            id={fieldName}\r\n            type=\"button\"\r\n            onClick={handleClick}\r\n            disabled={updateField.isUpdating}\r\n            style={\r\n              !updateField.isUpdating\r\n                ? { color: \"rgba(245, 146, 86, 1)\" }\r\n                : { color: \"rgba(17, 17, 17, 0.6)\" }\r\n            }\r\n          >\r\n            <IoPencilSharp\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n              }}\r\n            />\r\n          </UserInfoEdit>\r\n        </>\r\n      ) : (\r\n        <UserEditForm onSubmit={handleSubmit}>\r\n          <UserEditInput\r\n            type={type}\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n          <UserInfoEdit type=\"submit\">\r\n            <FaCheck\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                color: \"rgba(245, 146, 86, 1)\",\r\n              }}\r\n            />\r\n          </UserInfoEdit>\r\n        </UserEditForm>\r\n      )}\r\n    </InfoFieldContainer>\r\n  );\r\n};\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getIsLoggedIn, getUser } from \"../../Redux/selectors\";\r\nimport { currentUser, logOut, updateUser } from \"../../Redux/operations\";\r\nimport {\r\n  UserCardContainer,\r\n  UserInfoList,\r\n  UserInfoListItem,\r\n  LogOutButton,\r\n\r\n} from \"./userInfoCard.styled\";\r\n\r\nimport { TbLogout } from \"react-icons/tb\";\r\nimport { UserAvatar } from \"./userAvatar\";\r\nimport { UserInfoField } from \"./userInfoField\";\r\nimport { useAppDispatch, useAppSelector } from \"../../customHooks/customHooks\";\r\nimport { IUser } from \"../../interfaces/authInterface\";\r\nimport { ErrorFiller } from \"../Error/error\";\r\n\r\nexport interface IUpdateField {\r\n  isUpdating: boolean;\r\n  updateFieldName: string;\r\n}\r\n\r\nexport const UserInfoCard = () => {\r\n  const initialValue = { isUpdating: false, updateFieldName:  \"\" };\r\n  const [updateField, setUpdateField] = useState<IUpdateField>(initialValue);\r\n  const isLoggedIn = useAppSelector(getIsLoggedIn);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      dispatch(currentUser());\r\n    }\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    switch (e.currentTarget.id) {\r\n      case \"userNameUpdate\":\r\n        setUpdateField({ isUpdating: true, updateFieldName: \"userNameUpdate\" });\r\n        break;\r\n      case \"userEmailUpdate\":\r\n        setUpdateField({\r\n          isUpdating: true,\r\n          updateFieldName: \"userEmailUpdate\",\r\n        });\r\n        break;\r\n      case \"userBirthdayUpdate\":\r\n        setUpdateField({\r\n          isUpdating: true,\r\n          updateFieldName: \"userBirthdayUpdate\",\r\n        });\r\n        break;\r\n      case \"userPhoneUpdate\":\r\n        setUpdateField({\r\n          isUpdating: true,\r\n          updateFieldName: \"userPhoneUpdate\",\r\n        });\r\n        break;\r\n      case \"userCityUpdate\":\r\n        setUpdateField({ isUpdating: true, updateFieldName: \"userCityUpdate\" });\r\n        break;\r\n      default:\r\n        setUpdateField(initialValue);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logOut());\r\n  };\r\n\r\n  const handleUserUpdate = (data: Partial<IUser>) => {\r\n    dispatch(updateUser(data));\r\n    setUpdateField(initialValue);\r\n  };\r\n  const user = useAppSelector(getUser);\r\n  if (!user) {\r\n    return <ErrorFiller></ErrorFiller>;\r\n  }\r\n\r\n  \r\n  return (\r\n    <UserCardContainer>\r\n      <UserAvatar avatar={user.avatar}></UserAvatar>\r\n      <div>\r\n        <UserInfoList>\r\n          <UserInfoListItem>\r\n            <UserInfoField\r\n              fieldName=\"userNameUpdate\"\r\n              fieldLabel=\"Name:\"\r\n              fieldData={user.name}\r\n              handleClick={handleClick}\r\n              updateField={updateField || initialValue}\r\n              handleUserUpdate={handleUserUpdate}\r\n              objectKey=\"name\"\r\n            ></UserInfoField>\r\n          </UserInfoListItem>\r\n          <UserInfoListItem>\r\n            <UserInfoField\r\n              fieldName=\"userEmailUpdate\"\r\n              fieldLabel=\"Email:\"\r\n              fieldData={user.email}\r\n              handleClick={handleClick}\r\n              updateField={updateField}\r\n              handleUserUpdate={handleUserUpdate}\r\n              objectKey=\"email\"\r\n            ></UserInfoField>\r\n          </UserInfoListItem>\r\n          <UserInfoListItem>\r\n            <UserInfoField\r\n              fieldName=\"userBirthdayUpdate\"\r\n              fieldLabel=\"Birthday:\"\r\n              fieldData={user.birthday ? user.birthday : \"set birthday\"}\r\n              handleClick={handleClick}\r\n              updateField={updateField || initialValue}\r\n              handleUserUpdate={handleUserUpdate}\r\n              objectKey=\"birthday\"\r\n              type=\"date\"\r\n            ></UserInfoField>\r\n          </UserInfoListItem>\r\n          <UserInfoListItem>\r\n            <UserInfoField\r\n              fieldName=\"userPhoneUpdate\"\r\n              fieldLabel=\"Phone:\"\r\n              fieldData={user.phoneNumber}\r\n              handleClick={handleClick}\r\n              updateField={updateField || initialValue}\r\n              handleUserUpdate={handleUserUpdate}\r\n              objectKey=\"phoneNumber\"\r\n            ></UserInfoField>\r\n          </UserInfoListItem>\r\n          <UserInfoListItem>\r\n            <UserInfoField\r\n              fieldName=\"userCityUpdate\"\r\n              fieldLabel=\"City:\"\r\n              fieldData={user.city}\r\n              handleClick={handleClick}\r\n              updateField={updateField || initialValue}\r\n              handleUserUpdate={handleUserUpdate}\r\n              objectKey=\"city\"\r\n            ></UserInfoField>\r\n          </UserInfoListItem>\r\n        </UserInfoList>\r\n        <LogOutButton type=\"button\" onClick={handleLogout}>\r\n          <TbLogout\r\n            style={{\r\n              width: \"18px\",\r\n              height: \"18px\",\r\n              color: \"rgba(245, 146, 86, 1)\",\r\n            }}\r\n          />\r\n          Log Out\r\n        </LogOutButton>\r\n      </div>\r\n    </UserCardContainer>\r\n  );\r\n }\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserPageContainer = styled.div`\r\n  height: 100vh;\r\n  padding-top: 60px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  @media screen and (min-width: 768px) {\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n   display: flex; \r\n   gap: 32px;\r\n  }\r\n`;\r\n\r\nexport const PetsStyleContainer = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nexport const AddStyledConatiner = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const UserInfoLabels = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 500px;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 28px;\r\n  }\r\n  \r\n`;\r\nexport const ButtonInfoLabel = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 500px;\r\n`;\r\nexport const HeadingWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  width: 100%;\r\n\r\n`;\r\n\r\nexport const AddPetButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  margin-left: 15px;\r\n\r\n  color: white;\r\n  background-color: rgba(245, 146, 86, 1);\r\n  border: none;\r\n  border-radius: 50%;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { FormInput } from \"../FormElements/FormElements.styled\";\r\n\r\nexport const PetModalContainer = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    width: 608px;\r\n  }\r\n`;\r\n\r\nexport const AddPetHeading = styled.h1`\r\n  text-align: center;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const AddPetContainer = styled.form`\r\n  padding: 28px 20px 40px 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 40px 80px;\r\n  }\r\n`;\r\n\r\nexport const AddPetList = styled.ul`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const AddPetInput = styled(FormInput)`\r\n  margin-top: 8px;\r\n`;\r\n\r\nexport const AddPetLabel = styled.label`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  position: relative;\r\n\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n\r\n`;\r\n\r\nexport const PetAvatarLabel = styled.label`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`\r\n\r\nexport const PetAvatarContainer = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const AddPetButtonList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const AddPetTextArea = styled.textarea`\r\n  width: calc(100% - 40px);\r\n  height: 100px;\r\n  resize: none;\r\n\r\n  margin-top: 8px;\r\n  padding: 12px 14px;\r\n\r\n  border-radius: 20px;\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  background-color: rgb(253, 247, 242);\r\n\r\n  ::placeholder {\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: rgba(17, 17, 17, 0.6);\r\n  }\r\n`;\r\n\r\nexport const AddPetNextButton = styled.button.attrs({\r\n  type: \"button\",\r\n})`\r\n  border: 2px solid #f59256;\r\n  background-color: #f59256;\r\n  border-radius: 40px;\r\n\r\n  padding: 9px;\r\n  text-align: center;\r\n\r\n  width: 100%;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 180px;\r\n  }\r\n`;\r\n","import * as yup from \"yup\";\r\n\r\nexport let addPetFirstSchema = yup.object({\r\n  breed: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"set pet`s breed\")\r\n    .max(28, \"breed is too long(max 28)\")\r\n    .min(3, \"breed is too short(min 3)\"),\r\n  birthDate: yup.string().required(\"set pet`s birth date\"),\r\n  name: yup\r\n    .string()\r\n    .trim()\r\n    .required(\"set pet`s name\")\r\n    .max(28, \"name is too long(max 28)\")\r\n    .min(3, \"name is too short(min 3)\"),\r\n});\r\n\r\nexport let addPetSecondSchema = yup.object({\r\n  comments: yup.string().trim().max(140, \"comments is too long(max 140)\"),\r\n  avatar: yup.string().required(\"set pet`s avatar\"),\r\n});\r\n","import { useState } from \"react\";\r\nimport {\r\n  SpecialFieldError,\r\n  FormListItem,\r\n  InputContainer,\r\n} from \"../FormElements/FormElements.styled\";\r\nimport * as yup from \"yup\";\r\nimport { MainButton, SecondaryButton } from \"../Button/button.styled\";\r\nimport {\r\n  AddPetButtonList,\r\n  AddPetContainer,\r\n  AddPetHeading,\r\n  AddPetInput,\r\n  AddPetLabel,\r\n  AddPetList,\r\n  AddPetNextButton,\r\n  AddPetTextArea,\r\n  PetAvatarContainer,\r\n  PetAvatarLabel,\r\n  PetModalContainer,\r\n} from \"./addPetForm.styled\";\r\nimport { DropZone } from \"../Dropzone/dropzone\";\r\nimport { addPets } from \"../../api/petsAPI\";\r\nimport { getUser } from \"../../Redux/selectors\";\r\nimport { FormMark } from \"../FornMarks/formMarks\";\r\nimport birthDayNormalizer from \"../../Helpers/birthdayNormalizer\";\r\nimport {\r\n  addPetFirstSchema,\r\n  addPetSecondSchema,\r\n} from \"../../validationSchemas/addPetSchema\";\r\nimport { IPet } from \"../../interfaces/petInterface\";\r\nimport { IError } from \"../../interfaces/errorInterface\";\r\nimport { useAppSelector } from \"../../customHooks/customHooks\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { errorToastEmitter, succesToastEmitter } from \"../Toaster/toaste\";\r\n\r\ninterface IAddPetProps {\r\n  toggleModal: () => void;\r\n  handleData: (data: IPet) => void;\r\n}\r\n\r\ninterface IFormdata {\r\n  name: string;\r\n  birthDate: string;\r\n  breed: string;\r\n  avatar: string;\r\n  comments: string;\r\n  owner: string;\r\n}\r\n\r\nexport const AddPetForm = ({ toggleModal, handleData }: IAddPetProps) => {\r\n  const user = useAppSelector(getUser);\r\n  if (user === null) {\r\n    throw new Error();\r\n  }\r\n  const errorInitalState = {\r\n    message: \"\",\r\n    status: null,\r\n  };\r\n  const initialState = {\r\n    name: \"\",\r\n    birthDate: \"\",\r\n    breed: \"\",\r\n    avatar: \"\",\r\n    comments: \"\",\r\n    owner: user._id,\r\n  };\r\n  const [formData, setFormData] = useState<IFormdata>(initialState);\r\n  const [formStageState, setFormStageState] = useState<boolean>(false);\r\n  const [error, setError] = useState<IError | AxiosError>(errorInitalState);\r\n\r\n  const formStageHandler = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    const text = (e.target as HTMLButtonElement).textContent;\r\n    if (text === \"Next\") {\r\n      try {\r\n        await addPetFirstSchema.validate(formData);\r\n      } catch (error) {\r\n        if (error instanceof yup.ValidationError) {\r\n          return setError({ message: error.message, status: null });\r\n        }\r\n      }\r\n      setFormStageState(true);\r\n    }\r\n    if (text === \"Back\") {\r\n      setFormStageState(false);\r\n    }\r\n  };\r\n\r\n  const avatarInputHandler = (path: string) => {\r\n    setFormData({ ...formData, avatar: path });\r\n  };\r\n\r\n  const imputChangeHandler = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setError(errorInitalState);\r\n    switch (e.target.name) {\r\n      case \"name\":\r\n        setFormData({ ...formData, name: e.target.value });\r\n        break;\r\n      case \"birthDate\":\r\n        setFormData({ ...formData, birthDate: e.target.value });\r\n        break;\r\n      case \"breed\":\r\n        setFormData({ ...formData, breed: e.target.value });\r\n        break;\r\n      case \"comments\":\r\n        setFormData({ ...formData, comments: e.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmitHandle = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      await addPetSecondSchema.validate(formData);\r\n    } catch (error) {\r\n      if (error instanceof yup.ValidationError) {\r\n        return setError({ message: error.message, status: null });\r\n      }\r\n    }\r\n\r\n    const normalBirthday = birthDayNormalizer(formData.birthDate);\r\n    try {\r\n      const response = await addPets({\r\n        ...formData,\r\n        birthDate: normalBirthday,\r\n      });\r\n\r\n      handleData(response.data.pet);\r\n      succesToastEmitter(\"pet added\");\r\n    } catch (error) {\r\n      \r\n      if (axios.isAxiosError(error)) {\r\n        setError(error);\r\n        errorToastEmitter(error.response?.data.message);\r\n      }\r\n      return null;\r\n    }\r\n    setFormData(initialState);\r\n    setFormStageState(false);\r\n    toggleModal();\r\n  };\r\n\r\n  const cancelationHandler = () => {\r\n    toggleModal();\r\n    setFormData(initialState);\r\n  };\r\n\r\n  return (\r\n    <PetModalContainer>\r\n      <AddPetHeading>Add pet</AddPetHeading>\r\n      <AddPetContainer onSubmit={onSubmitHandle}>\r\n        {!formStageState ? (\r\n          <>\r\n            <AddPetList>\r\n              <FormListItem>\r\n                <AddPetLabel htmlFor=\"name\">Name pet</AddPetLabel>\r\n                <InputContainer>\r\n                  <AddPetInput\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Type pet name\"\r\n                    onChange={imputChangeHandler}\r\n                    value={formData.name}\r\n                  />\r\n                  {error.message.length >= 1 &&\r\n                    error.message.includes(\"name\") && (\r\n                      <FormMark message={error.message}></FormMark>\r\n                    )}\r\n                </InputContainer>\r\n              </FormListItem>\r\n              <FormListItem>\r\n                <AddPetLabel htmlFor=\"birthDate\">Date of birth</AddPetLabel>\r\n                <InputContainer>\r\n                  <AddPetInput\r\n                    type=\"date\"\r\n                    name=\"birthDate\"\r\n                    min=\"1950-01-01\"\r\n                    onChange={imputChangeHandler}\r\n                    value={formData.birthDate}\r\n                  ></AddPetInput>\r\n                  {error.message.length >= 1 &&\r\n                    error.message.includes(\"birth\") && (\r\n                      <SpecialFieldError>\r\n                        birthday field is empty\r\n                      </SpecialFieldError>\r\n                    )}\r\n                </InputContainer>\r\n              </FormListItem>\r\n              <FormListItem>\r\n                <AddPetLabel htmlFor=\"breed\"> Breed</AddPetLabel>\r\n                <InputContainer>\r\n                  <AddPetInput\r\n                    type=\"text\"\r\n                    name=\"breed\"\r\n                    placeholder=\"type pet breed\"\r\n                    onChange={imputChangeHandler}\r\n                    value={formData.breed}\r\n                  ></AddPetInput>\r\n                  {error.message.length >= 1 &&\r\n                    error.message.includes(\"breed\") && (\r\n                      <FormMark message={error.message}></FormMark>\r\n                    )}\r\n                </InputContainer>\r\n              </FormListItem>\r\n            </AddPetList>\r\n            <AddPetButtonList>\r\n              <AddPetNextButton type=\"button\" onClick={formStageHandler}>\r\n                Next\r\n              </AddPetNextButton>\r\n              <SecondaryButton type=\"button\" onClick={cancelationHandler}>\r\n                Cancel\r\n              </SecondaryButton>\r\n            </AddPetButtonList>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <AddPetList>\r\n              <FormListItem>\r\n                <PetAvatarContainer>\r\n                  <PetAvatarLabel>Add pet photo</PetAvatarLabel>\r\n                  <DropZone avatarInputHandler={avatarInputHandler}></DropZone>\r\n                  {error.message === \"set pet`s avatar\" && (\r\n                    <SpecialFieldError>{error.message}</SpecialFieldError>\r\n                  )}\r\n                </PetAvatarContainer>\r\n              </FormListItem>\r\n              <FormListItem>\r\n                <AddPetLabel htmlFor=\"comments\">Comments</AddPetLabel>\r\n                <InputContainer>\r\n                  <AddPetTextArea\r\n                    name=\"comments\"\r\n                    placeholder=\"Type comments\"\r\n                    onChange={imputChangeHandler}\r\n                    value={formData.comments}\r\n                  ></AddPetTextArea>\r\n                  {error.message === \"comments is too long(max 140)\" && (\r\n                    <SpecialFieldError>{error.message}</SpecialFieldError>\r\n                  )}\r\n                </InputContainer>\r\n              </FormListItem>\r\n            </AddPetList>\r\n            <AddPetButtonList>\r\n              <MainButton type=\"submit\">Done</MainButton>\r\n              <SecondaryButton type=\"button\" onClick={formStageHandler}>\r\n                Back\r\n              </SecondaryButton>\r\n            </AddPetButtonList>\r\n          </>\r\n        )}\r\n      </AddPetContainer>\r\n    </PetModalContainer>\r\n  );\r\n};\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { ICreatedPet, IPet } from \"../interfaces/petInterface\";\r\n\r\nexport const fetchPets = async (): Promise<AxiosResponse<{ pets: IPet[] }>> => {\r\n  try {\r\n    const response = await axios.get(\"/pets\");\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addPets = async (pet: ICreatedPet): Promise<AxiosResponse> => {\r\n  try {\r\n    const response = await axios.post(\"/pets\", pet);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deletePet = async (id: string): Promise<AxiosResponse> => {\r\n  try {\r\n    const response = await axios.delete(`/pets/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const PetsList = styled.ul`\r\n  margin-top: 32px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  @media screen and (min-width: 768px) {\r\n    width: 100%;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    margin-top: 24px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const PetsListItem = styled.li`\r\n  position: relative;\r\n\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\r\n  padding: 20px 20px 40px 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: calc(100% - 64px);\r\n    display: flex;\r\n    gap: 32px;\r\n  }\r\n`;\r\n\r\nexport const PetsListAvatar = styled.img`\r\n  width: 240px;\r\n  height: 240px;\r\n  border-radius: 20px;\r\n  @media screen and (min-width: 768px) {\r\n    height: 161px;\r\n    width: 161px;\r\n  }\r\n`;\r\n\r\nexport const PetDataInfo = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const PetDataItem = styled.li`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n`;\r\nexport const PetDataLabel = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const PetDeleteButton = styled.button`\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 272px;\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border: none;\r\n  background-color: transparent;\r\n\r\n  color: rgba(17, 17, 17, 0.6);\r\n  @media screen and (min-width: 768px) {\r\n    top: 20px;\r\n    right: 20px;\r\n    \r\n    width: 44px;\r\n    height: 44px;\r\n    background-color: rgba(253, 247, 242, 1);\r\n    border-radius: 50%;\r\n    padding: 10px;\r\n  }\r\n`;\r\n","import { HiMiniTrash } from \"react-icons/hi2\";\r\nimport {\r\n  PetDataInfo,\r\n  PetDataItem,\r\n  PetDataLabel,\r\n  PetDeleteButton,\r\n  PetsList,\r\n  PetsListAvatar,\r\n  PetsListItem,\r\n} from \"./petsData.styled\";\r\n\r\nimport { IPet } from \"../../interfaces/petInterface\";\r\n\r\n\r\ninterface IPetDataProps {\r\n  petsList: IPet[];\r\n  handleDelete: (id: string) => void;\r\n}\r\n\r\nexport const PetsData = ({ petsList, handleDelete }: IPetDataProps) => {\r\n\r\n  return (\r\n    <PetsList>\r\n      {petsList.map((pet) => {\r\n        return (\r\n          <PetsListItem key={pet._id}>\r\n            <PetsListAvatar src={pet.avatar} alt=\"petAvatar\" />\r\n            <PetDataInfo>\r\n              <PetDataItem>\r\n                <PetDataLabel>Name:&nbsp;</PetDataLabel>\r\n                {pet.name}\r\n              </PetDataItem>\r\n              <PetDataItem>\r\n                <PetDataLabel>Date of Bitrth:&nbsp;</PetDataLabel>\r\n                {pet.birthDate}\r\n              </PetDataItem>\r\n              <PetDataItem>\r\n                <PetDataLabel>Breed:&nbsp;</PetDataLabel>\r\n                {pet.breed}\r\n              </PetDataItem>\r\n              <PetDataItem>\r\n                <PetDataLabel>Comments:&nbsp;</PetDataLabel>\r\n                {pet.comments}\r\n              </PetDataItem>\r\n            </PetDataInfo>\r\n            <PetDeleteButton\r\n              type=\"button\"\r\n              onClick={() => {\r\n                handleDelete(pet._id);\r\n              }}\r\n            >\r\n              <HiMiniTrash style={{ width: \"100%\", height: \"100%\" }} />\r\n            </PetDeleteButton>\r\n          </PetsListItem>\r\n        );\r\n      })}\r\n    </PetsList>\r\n  );\r\n};\r\n","import { UserInfoCard } from \"../../Components/UserInfoCard/userInfoCard\";\r\nimport {\r\n  AddPetButton,\r\n  AddStyledConatiner,\r\n  ButtonInfoLabel,\r\n  HeadingWrapper,\r\n  PetsStyleContainer,\r\n  UserInfoLabels,\r\n  UserPageContainer,\r\n} from \"./userPage.styled\";\r\nimport { FaPlus } from \"react-icons/fa6\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { ModalCloseButton } from \"../../Components/Modal/modal.styled\";\r\nimport { ModalWindow } from \"../../Components/Modal/modal\";\r\nimport { AddPetForm } from \"../../Components/AddPetForm/addPetForm\";\r\n\r\nimport { deletePet, fetchPets } from \"../../api/petsAPI\";\r\nimport { PetsData } from \"../../Components/PetsData/petsData\";\r\nimport { IPet } from \"../../interfaces/petInterface\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { ErrorFiller } from \"../../Components/Error/error\";\r\nimport { errorToastEmitter, succesToastEmitter } from \"../../Components/Toaster/toaste\";\r\n\r\nconst UserPage = () => {\r\n  const [modalOpenState, setModalOpenState] = useState<boolean>(false);\r\n  const [petsList, setPetsList] = useState<IPet[]>([]);\r\n  const [error, setError] = useState<AxiosError | null>(null);\r\n\r\n  const handleData = (data: IPet) => {\r\n    setPetsList([...petsList, data]);\r\n  };\r\n\r\n  const handleDelete =async (id: string) => {\r\n    try {\r\n    await deletePet(id)\r\n    const updatedList = petsList.filter((pet: IPet) => pet._id !== id);\r\n    await setPetsList(updatedList);\r\n    await succesToastEmitter(\"pet succesfully deleted\")\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        errorToastEmitter(error.response?.data.message)\r\n      }\r\n      return null\r\n    }\r\n  };\r\n\r\n  const handleFetchPets = async () => {\r\n    try {\r\n      const response = await fetchPets();\r\n      setPetsList(response.data.pets);\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        setError(error);\r\n     \r\n      }\r\n      return null;\r\n    }\r\n  };\r\n  const toggleModal = () => {\r\n    setModalOpenState(!modalOpenState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchPets();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <UserPageContainer>\r\n        <div>\r\n          <UserInfoLabels>My information:</UserInfoLabels>\r\n          <UserInfoCard></UserInfoCard>\r\n        </div>\r\n        <PetsStyleContainer>\r\n          <HeadingWrapper>\r\n            <UserInfoLabels>My pets:</UserInfoLabels>\r\n            <AddStyledConatiner>\r\n              <ButtonInfoLabel>Add pet</ButtonInfoLabel>\r\n              <AddPetButton onClick={toggleModal}>\r\n                <FaPlus style={{ width: \"24px\", height: \"24px\" }} />\r\n              </AddPetButton>\r\n            </AddStyledConatiner>\r\n          </HeadingWrapper>\r\n          {error ? (\r\n            <ErrorFiller></ErrorFiller>\r\n          ) : (\r\n            <PetsData\r\n              petsList={petsList}\r\n              handleDelete={handleDelete}\r\n            ></PetsData>\r\n          )}\r\n        </PetsStyleContainer>\r\n      </UserPageContainer>\r\n      {modalOpenState && (\r\n        <ModalWindow toggleModal={toggleModal}>\r\n          <AddPetForm\r\n            toggleModal={toggleModal}\r\n            handleData={handleData}\r\n          ></AddPetForm>\r\n          <ModalCloseButton type=\"button\" onClick={toggleModal}>\r\n            <RxCross2 style={{ width: \"15px\", height: \"15px\" }} />\r\n          </ModalCloseButton>\r\n        </ModalWindow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default UserPage;\r\n","import styled from \"styled-components\"\r\n\r\nexport const FormMarkWrapper = styled.div`\r\n position: absolute;\r\n color: red;\r\n right: 18px;\r\n bottom: 28px;\r\n`\r\n\r\nexport const FormHint = styled.p`\r\n margin-top: 4px;\r\n margin-left: 32px;\r\n font-size: 14px;\r\n font-weight: 400;\r\n color: rgba(60, 188, 129, 1);\r\n`","import { GoXCircleFill } from \"react-icons/go\";\r\nimport { FormHint, FormMarkWrapper } from \"./formMarks.styled\";\r\n\r\n\r\nexport const FormMark = ({ message }: { message: string}) => {\r\n  return (\r\n    <>\r\n      <FormMarkWrapper>\r\n        <GoXCircleFill\r\n          style={{ width: \"20px\", height: \"20px\" }}\r\n        ></GoXCircleFill>\r\n      </FormMarkWrapper>\r\n      <FormHint>{message}</FormHint>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const ErrorContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 10%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const ErrorHeading = styled.h1`\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 64px;\r\n}\r\n`;\r\nexport const ErrorPhrase = styled.p`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 34px;\r\n    text-align: center;\r\n  }\r\n\r\n`;\r\n\r\nexport const ErrorImg = styled.img`\r\n  width: 60%;\r\n  @media screen and (min-width: 768px) {\r\n  width: 25%;\r\n  }\r\n`;\r\n","import SadPepe from \"../../pictures/error.png\";\r\nimport {\r\n  ErrorContainer,\r\n  ErrorHeading,\r\n  ErrorImg,\r\n  ErrorPhrase,\r\n} from \"./error.styled\";\r\n\r\nexport const ErrorFiller = () => {\r\n  return (\r\n    <ErrorContainer>\r\n      <ErrorImg src={SadPepe} alt=\"sad Pepe\"></ErrorImg>\r\n      <div>\r\n        <ErrorHeading>OOPS ERROR!</ErrorHeading>\r\n        <ErrorPhrase> Content not found</ErrorPhrase>\r\n      </div>\r\n    </ErrorContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DropZoneContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  margin-top: 8px;\r\n\r\n  background-color: rgba(253, 247, 242, 1);\r\n  width: 208px;\r\n  height: 208px;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const DropZoneImage = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 20px;\r\n`;","import React, { useCallback, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DropZoneContainer, DropZoneImage } from \"./dropzone.styled\";\r\nimport { BsPlusLg } from \"react-icons/bs\";\r\nimport convertToBase64 from \"../../Helpers/imageConverter\";\r\n\r\nexport const DropZone = ({\r\n  avatarInputHandler,\r\n}: {\r\n  avatarInputHandler: (path: string) => void;\r\n}) => {\r\n  const fileWhiteList = [\r\n    \"image/png\",\r\n    \"image/webp\",\r\n    \"image/jpeg\",\r\n    \"image/jpg\",\r\n    \"image/svg\",\r\n  ];\r\n  \r\n  \r\n  const [cryptImage, setCryptImage] = useState<string | null>(null);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles: File[]) => {\r\n      if (!fileWhiteList.includes(acceptedFiles[0].type)) {\r\n        window.alert(\"file format should be png, webp, jpg, jpeg, svg\");\r\n        return;\r\n      }\r\n\r\n      convertToBase64(acceptedFiles[0])\r\n        .then((base64String) => {\r\n      \r\n          \r\n          const imageString = `data:${acceptedFiles[0].type};base64,${base64String}`;\r\n          setCryptImage(imageString);\r\n          avatarInputHandler(imageString);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error converting file:\", error);\r\n        });\r\n      \r\n    },\r\n    // eslint-disable-next-line\r\n    [avatarInputHandler]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <DropZoneContainer {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {cryptImage === null ? (\r\n        <BsPlusLg\r\n          style={{\r\n            color: \"rgba(17, 17, 17, 0.6)\",\r\n            width: \"48px\",\r\n            height: \"48px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <DropZoneImage src={cryptImage} alt=\"petImg\" />\r\n      )}\r\n    </DropZoneContainer>\r\n  );\r\n};\r\n\r\n","function convertToBase64(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      const result = reader.result as string;\r\n      if (result) {\r\n        resolve(result.split(\",\")[1]); // Отримуємо тільки base64 без `data:image/...;base64,`\r\n      } else {\r\n        reject(new Error(\"Failed to read file\"));\r\n      }\r\n    };\r\n\r\n    reader.onerror = (error) => reject(error);\r\n\r\n    reader.readAsDataURL(file); // Читаємо файл як data URL\r\n  });\r\n}\r\n\r\nexport default convertToBase64;","import { ReactPortal, useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Backdrop, Modal } from \"./modal.styled\";\r\n\r\n\r\n\r\ninterface IModalProps {\r\n  \r\n  children: React.ReactNode;\r\n  toggleModal: () => void;\r\n  modalOpenState?: boolean;\r\n}\r\n\r\nexport const ModalWindow = ({\r\n  children,\r\n  toggleModal,\r\n  modalOpenState,\r\n}: IModalProps): ReactPortal | null => {\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.code === \"Escape\") {\r\n        toggleModal();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (modalOpenState) {\r\n      document.body.style.overflow = \"hidden\";\r\n      document.body.style.pointerEvents = \"none\";\r\n      document.body.style.overflow = \"\";\r\n      document.body.style.pointerEvents = \"\";\r\n    }\r\n    return () => {\r\n      document.body.style.overflow = \"\";\r\n      document.body.style.pointerEvents = \"\";\r\n    };\r\n  }, [modalOpenState]);\r\n\r\n  const onClickHandle = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    const target = e.target as HTMLElement;\r\n    if (target && target.children.length === 1) {\r\n      toggleModal();\r\n    }\r\n  };\r\n  const modalRoot: HTMLElement | null = document.getElementById(\"modal-root\");\r\n  if (!modalRoot) return null;\r\n  \r\n\r\n  if (modalRoot) {\r\n    return createPortal(\r\n      <Backdrop onClick={onClickHandle}>\r\n        <Modal onClick={(e) => e.stopPropagation()}>{children}</Modal>\r\n      </Backdrop>,\r\n      modalRoot\r\n    ) ;\r\n  }\r\n\r\n  return null\r\n};\r\n\r\n","import styled from \"styled-components\"\r\n\r\nexport const MainButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: #F59256;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  \r\n  width: 100%;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    width: 280px\r\n  }\r\n`\r\n\r\nexport const SecondaryButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: transparent;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n  \r\n  width: 100%;\r\n  color: black;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    width: 280px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\n\r\nexport const AuthMainButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: #F59256;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  \r\n  width: 100%;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`\r\n\r\nexport const AuthSecondaryButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: transparent;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n  \r\n  width: 100%;\r\n  color: black;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`"],"names":["date","splitedDate","split","FormInput","styled","input","FormButtonContainer","div","FormListItem","li","FormLabel","label","InputContainer","SpecialFieldError","p","Backdrop","Modal","ModalCloseButton","button","UserCardContainer","UserInfoList","ul","UserInfoListItem","LogOutButton","UserAvatarWrapper","UserAvatarImage","img","ChangeAvatarLabel","ChangeAvatarInput","ButtonTextWrapper","span","UserAvatar","_ref","avatar","dispatch","useAppDispatch","cryptImage","setCryptImage","useState","_jsxs","_Fragment","children","_jsx","src","alt","type","accept","onChange","e","target","files","Error","convertToBase64","then","base64String","imageString","data","updateUser","catch","error","console","HiCamera","style","width","height","color","InfoFieldContainer","UserInfoLabel","UserInfoWrapper","UserInfoEdit","UserEditForm","form","UserEditInput","UserInfoField","fieldName","fieldLabel","fieldData","handleClick","updateField","handleUserUpdate","objectKey","inputValue","setInputValue","updateFieldName","id","onClick","disabled","isUpdating","IoPencilSharp","onSubmit","preventDefault","value","FaCheck","UserInfoCard","initialValue","setUpdateField","isLoggedIn","useAppSelector","getIsLoggedIn","useEffect","currentUser","currentTarget","user","getUser","name","email","birthday","phoneNumber","city","handleLogout","logOut","TbLogout","ErrorFiller","UserPageContainer","PetsStyleContainer","AddStyledConatiner","UserInfoLabels","ButtonInfoLabel","HeadingWrapper","AddPetButton","PetModalContainer","AddPetHeading","h1","AddPetContainer","AddPetList","AddPetInput","AddPetLabel","PetAvatarLabel","PetAvatarContainer","AddPetButtonList","AddPetTextArea","textarea","AddPetNextButton","attrs","addPetFirstSchema","yup","breed","trim","required","max","min","birthDate","addPetSecondSchema","comments","AddPetForm","toggleModal","handleData","errorInitalState","message","status","initialState","owner","_id","formData","setFormData","formStageState","setFormStageState","setError","formStageHandler","async","text","textContent","validate","imputChangeHandler","normalBirthday","birthDayNormalizer","response","axios","post","pet","addPets","succesToastEmitter","_error$response","isAxiosError","errorToastEmitter","DropZone","avatarInputHandler","path","htmlFor","placeholder","MainButton","SecondaryButton","length","includes","FormMark","cancelationHandler","PetsList","PetsListItem","PetsListAvatar","PetDataInfo","PetDataItem","PetDataLabel","PetDeleteButton","PetsData","petsList","handleDelete","map","HiMiniTrash","UserPage","modalOpenState","setModalOpenState","setPetsList","handleFetchPets","get","fetchPets","pets","FaPlus","delete","deletePet","updatedList","filter","ModalWindow","RxCross2","FormMarkWrapper","FormHint","GoXCircleFill","ErrorContainer","ErrorHeading","ErrorPhrase","ErrorImg","SadPepe","DropZoneContainer","DropZoneImage","fileWhiteList","onDrop","useCallback","acceptedFiles","window","alert","getRootProps","getInputProps","useDropzone","BsPlusLg","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","handleKeyDown","code","addEventListener","removeEventListener","document","body","overflow","pointerEvents","onClickHandle","modalRoot","getElementById","createPortal","stopPropagation","AuthMainButton","AuthSecondaryButton"],"sourceRoot":""}