{"version":3,"file":"static/js/627.88b420ad.chunk.js","mappings":"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","sources":["Components/FormElements/FormElements.styled.ts","Components/PageHint/pageHint.styled.ts","Components/PageHint/pageHint.tsx","Components/FornMarks/formMarks.styled.ts","Components/FornMarks/formMarks.tsx","Components/LoginForm/LoginForm.styled.ts","Components/LoginForm/LoginForm.tsx","pages/loginPage/loginPage.styled.ts","pages/loginPage/loginPage.tsx","Components/Button/button.styled.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormInput = styled.input`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 280px;\r\n  padding: 12px 14px;\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  background-color: transparent;\r\n  ::placeholder {\r\n    color: rgba(17, 17, 17, 0.6);\r\n    font-weight: 400px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\nexport const FormButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 280px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const FormListItem = styled.li`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  width: 100%;\r\n  max-width: 280px;\r\n  position: relative;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  position: relative;\r\n  max-width: 280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 448px;\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const SpecialFieldError = styled.p`\r\n  margin-top: 4px;\r\n  margin-left: 32px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: rgba(60, 188, 129, 1);\r\n`;\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const PageHintPhrase = styled.p`\r\n    text-align: center;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: rgba(17, 17, 17, 0.6);\r\n`\r\nexport const PageLink = styled.a`\r\n    color: rgba(0, 0, 238, 0.6);\r\n    text-decoration: underline solid 1px;\r\n`","import { PageHintPhrase, PageLink } from \"./pageHint.styled\";\r\n\r\ninterface IHintProps {\r\n  hintMessage: string;\r\n  linkMessage: string;\r\n  linkPath: string;\r\n}\r\n\r\nexport const PageHint = ({ hintMessage, linkMessage, linkPath }: IHintProps) => {\r\n  return (\r\n    <PageHintPhrase>\r\n      {hintMessage} <PageLink href={linkPath}>{linkMessage}</PageLink>\r\n    </PageHintPhrase>\r\n  );\r\n};\r\n","import styled from \"styled-components\"\r\n\r\nexport const FormMarkWrapper = styled.div`\r\n position: absolute;\r\n color: red;\r\n right: 18px;\r\n bottom: 28px;\r\n`\r\n\r\nexport const FormHint = styled.p`\r\n margin-top: 4px;\r\n margin-left: 32px;\r\n font-size: 14px;\r\n font-weight: 400;\r\n color: rgba(60, 188, 129, 1);\r\n`","import { GoXCircleFill } from \"react-icons/go\";\r\nimport { FormHint, FormMarkWrapper } from \"./formMarks.styled\";\r\n\r\n\r\nexport const FormMark = ({ message }: { message: string}) => {\r\n  return (\r\n    <>\r\n      <FormMarkWrapper>\r\n        <GoXCircleFill\r\n          style={{ width: \"20px\", height: \"20px\" }}\r\n        ></GoXCircleFill>\r\n      </FormMarkWrapper>\r\n      <FormHint>{message}</FormHint>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoginFormContainer = styled.form`\r\n  width: 100%;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LoginFormList = styled.ul`\r\n  width: 280px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 24px;\r\n\r\n  margin-bottom: 40px;\r\n`;\r\n","import { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport {\r\n  FormButtonContainer,\r\n  FormInput,\r\n  FormLabel,\r\n  FormListItem,\r\n} from \"../FormElements/FormElements.styled\";\r\nimport { AuthMainButton } from \"../Button/button.styled\";\r\nimport { LoginFormContainer, LoginFormList } from \"./LoginForm.styled\";\r\n\r\nimport { loginUser } from \"../../Redux/operations\";\r\nimport { getError } from \"../../Redux/selectors\";\r\nimport { FormMark } from \"../FornMarks/formMarks\";\r\nimport { useAppDispatch, useAppSelector } from \"../../customHooks/customHooks\";\r\n\r\nexport const LoginForm = () => {\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const errorInitalState = {\r\n    message: \"\",\r\n    status: null,\r\n  };\r\n\r\n  interface IFormData{\r\n    email: string;\r\n    password: string;\r\n  }\r\n\r\n  interface IError{\r\n    message: string;\r\n    status: number | null;\r\n  }\r\n\r\n\r\n  const [formData, setFormData] = useState<IFormData>(initialState);\r\n  const [error, setErrorMessage] = useState<IError>(errorInitalState);\r\n  const dispatch = useAppDispatch()\r\n  const errorMessage = useAppSelector(getError);\r\n\r\n  useEffect(() => {\r\n    setErrorMessage(errorMessage);\r\n  }, [errorMessage]);\r\n\r\n  const loginHandler = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (formData.email === \"\") {\r\n      return setErrorMessage({ message: \"Email field is empty\", status: null });\r\n    }\r\n    if (formData.password === \"\") {\r\n      return setErrorMessage({ message: \"Password field is empty\", status: null });\r\n    }\r\n\r\n    dispatch(loginUser({ email: formData.email, password: formData.password }));\r\n    setFormData(initialState);\r\n  };\r\n\r\n  const imputChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setErrorMessage(errorInitalState);\r\n    switch (e.target.name) {\r\n      case \"email\":\r\n        setFormData({ ...formData, email: e.target.value });\r\n        \r\n        break;\r\n      case \"password\":\r\n        setFormData({ ...formData, password: e.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <LoginFormContainer onSubmit={loginHandler}>\r\n      <LoginFormList>\r\n        <FormListItem>\r\n          <FormLabel>\r\n            <FormInput\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={imputChangeHandler}\r\n              value={formData.email}\r\n            />\r\n            {(error.message === \"Email field is empty\" ||\r\n              error.status === 404) && (\r\n              <FormMark message={error.message}></FormMark>\r\n            )}\r\n          </FormLabel>\r\n        </FormListItem>\r\n        <FormListItem>\r\n          <FormLabel>\r\n            <FormInput\r\n              type=\"text\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={imputChangeHandler}\r\n              value={formData.password}\r\n            />\r\n            {(error.message === \"Password field is empty\" ||\r\n              error.status === 401) && (\r\n              <FormMark message={error.message}></FormMark>\r\n            )}\r\n          </FormLabel>\r\n        </FormListItem>\r\n      </LoginFormList>\r\n      <FormButtonContainer>\r\n        <AuthMainButton type=\"submit\">Login</AuthMainButton>\r\n      </FormButtonContainer>\r\n    </LoginFormContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport backgroundImg from \"../../pictures/Vector.png\";\r\nimport backgroundTabletImg from \"../../pictures/loginTabletBackground.png\"\r\nimport backgroundPCImg from \"../../pictures/loginPcBackground.png\"\r\n\r\nexport const LoginPageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0 20px;\r\n  height: 91.3vh;\r\n  background-image: url(${backgroundImg});\r\n  background-repeat: no-repeat;\r\n  background-position-x: center;\r\n  background-position-y: 280px;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  @media screen and (min-width: 768px) {\r\n    background-image: url(${backgroundTabletImg});\r\n    background-position-y: 400px;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    background-image: url(${backgroundPCImg});\r\n    background-position-y: 300px;\r\n  }\r\n`;\r\nexport const LoginPageHeading = styled.h1`\r\n  text-align: center;\r\n  margin-top: 42px;\r\n  margin-bottom: 40px;\r\n  padding: 0;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const LogStyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  @media screen and (min-width: 768px) {\r\n    background-color: white;\r\n    border-radius: 40px;\r\n    width: 608px;\r\n    height: 500px;\r\n    margin-top: 80px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    width: 618px;\r\n  }\r\n`;\r\n","import { LoginForm } from \"../../Components/LoginForm/LoginForm\";\r\nimport { PageHint } from \"../../Components/PageHint/pageHint\";\r\nimport { LoginPageContainer, LoginPageHeading, LogStyledContainer } from \"./loginPage.styled\";\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <LoginPageContainer>\r\n      <LogStyledContainer>\r\n        <LoginPageHeading>Login</LoginPageHeading>\r\n        <LoginForm></LoginForm>\r\n        <PageHint\r\n          hintMessage=\"Don`t have account?\"\r\n          linkMessage=\"Register\"\r\n          linkPath=\"/register\"\r\n        ></PageHint>\r\n      </LogStyledContainer>\r\n    </LoginPageContainer>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import styled from \"styled-components\"\r\n\r\nexport const MainButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: #F59256;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  \r\n  width: 100%;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    width: 280px\r\n  }\r\n`\r\n\r\nexport const SecondaryButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: transparent;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n  \r\n  width: 100%;\r\n  color: black;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  @media screen and (min-width: 768px) {\r\n    width: 280px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\n\r\nexport const AuthMainButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: #F59256;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  \r\n  width: 100%;\r\n  color: white;\r\n\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`\r\n\r\nexport const AuthSecondaryButton = styled.button`\r\n  border: 2px solid #F59256;\r\n  background-color: transparent;\r\n  border-radius: 40px;\r\n  \r\n  padding: 9px;\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n  \r\n  width: 100%;\r\n  color: black;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`"],"names":["FormInput","styled","input","FormButtonContainer","div","FormListItem","li","FormLabel","label","InputContainer","SpecialFieldError","p","PageHintPhrase","PageLink","a","PageHint","_ref","hintMessage","linkMessage","linkPath","_jsxs","children","_jsx","href","FormMarkWrapper","FormHint","FormMark","message","_Fragment","GoXCircleFill","style","width","height","LoginFormContainer","form","LoginFormList","ul","LoginForm","initialState","email","password","errorInitalState","status","formData","setFormData","useState","error","setErrorMessage","dispatch","useAppDispatch","errorMessage","useAppSelector","getError","useEffect","imputChangeHandler","e","target","name","value","onSubmit","async","preventDefault","loginUser","type","placeholder","onChange","AuthMainButton","LoginPageContainer","backgroundImg","backgroundTabletImg","backgroundPCImg","LoginPageHeading","h1","LogStyledContainer","LoginPage","MainButton","button","SecondaryButton","AuthSecondaryButton"],"sourceRoot":""}